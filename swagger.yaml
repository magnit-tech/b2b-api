openapi: 3.0.1
info:
  title: Magnit B2B Platform API
  description: Описание API для интеграции с Магнит. События от системы Магнит реализуются на стороне Партнера, остальные методы реализованы на стороне Магнит. Сервис Партнера выступает в роли клиента. Общение происходит на основании pull-push-модели, т.е. сервис Партнера как клиент запрашивает информацию о ресурсе, может создавать/обновлять ресурсы, если это необходимо, получать события от системы Магнит. AuthRequest.client_id и AuthRequest.client_secret выдаются по запросу
  version: 0.1.33
servers:
  - url: https://b2b-api.magnit.ru/api
    description: Основной стенд интеграции.
  - url: https://b2b-api-gateway.uat.ya.magnit.ru/api
    description: Демо стенд для проведения тестирования процессинга заказов.
tags:
  - name: Auth
    description: Аутентификация в системе
  - name: Orders
    description: Заказы
  - name: Order Events
    description: События по заказу от Партнера
  - name: Nomenclature
    description: Информация по товарам
  - name: WebHookEvent
    description: События от системы Магнит
  - name: Last Mile
    description: Услуга доставки от системы Магнит
  - name: Magnit Post
    description: Услуга доставки до ПВЗ
  - name: Magnit Market API - Товары
    description: Партнерская интеграция с Magnit Market по модели FBS. Товары
  - name: Magnit Market API - Категории
    description: Партнерская интеграция с Magnit Market по модели FBS. Категории
  - name: Magnit Market API - Цены
    description: Партнерская интеграция с Magnit Market по модели FBS. Цены
  - name: Magnit Market API - Остатки
    description: Партнерская интеграция с Magnit Market по модели FBS. Товары
  - name: Magnit Market API - Магазины
    description: Партнерская интеграция с Magnit Market по модели FBS. Магазины
  - name: Magnit Market API - Задания на сборку
    description: Партнерская интеграция с Magnit Market по модели FBS. Задания на сборку
  - name: Magnit Market API - Отгрузка посылок
    description: Партнерская интеграция с Magnit Market по модели FBS. Отгрузка посылок

paths:
  /v1/oauth/token:
    post:
      deprecated: true
      tags:
        - Auth
      summary: Получение токена авторизации
      description: Поддержка будет прекращена 31 января 2025 года. Запросите новый токен 1 раз в 24 часа. Запрашивать токен перед каждым запросом к API-методам не требуется.
      requestBody:
        required: true
        description: Запрос на получение токена
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthRequest"
      responses:
        200:
          description: Успешная авторизация
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthSuccessResponse"
        400:
          $ref: "#/components/responses/BadRequestErrorResponse"
        401:
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        500:
          $ref: "#/components/responses/InternalServerErrorResponse"
        503:
          $ref: "#/components/responses/UnavailableServerErrorResponse"

  /v2/oauth/token:
    post:
      tags:
        - Auth
      summary: Получение аутентификационного токена
      description: "Запросите новый токен 1 раз за 60 минут. Запрашивать токен перед каждым запросом к API-методам не требуется. Ссылка на полную спецификацию OAuth2 - https://tools.ietf.org/html/rfc6749"
      requestBody:
        $ref: "#/components/requestBodies/PostV2OauthTokenRequest"
      responses:
        200:
          $ref: "#/components/responses/PostV2OauthSuccessResponse"
        400:
          description: Ошибка в параметрах, в ответе список ошибок валидации
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OauthError"
        401:
          description: "Ошибка авторизации. В запросе не указан или указан несуществующий client_id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OauthError"
        500:
          $ref: "#/components/responses/InternalServerErrorResponse"
        503:
          $ref: "#/components/responses/UnavailableServerErrorResponse"

  /v1/orders:
    post:
      tags:
        - Orders
      summary: Создание заказа
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequest"
      responses:
        201:
          $ref: "#/components/responses/OrderCreateResponse"
        400:
          $ref: "#/components/responses/BadRequestErrorResponse"
        401:
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        500:
          $ref: "#/components/responses/InternalServerErrorResponse"
        503:
          $ref: "#/components/responses/UnavailableServerErrorResponse"

  /v1/orders/{orderId}:
    get:
      tags:
        - Orders
      summary: Детальная информация о заказе
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
          example: "PM-bB00000001"
          description: "Идентификатор заказа в системе Магнита"
      responses:
        200:
          $ref: "#/components/responses/OrderResponse"
        400:
          $ref: "#/components/responses/BadRequestErrorResponse"
        401:
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        404:
          $ref: "#/components/responses/NotFoundErrorResponse"
        500:
          $ref: "#/components/responses/InternalServerErrorResponse"
        503:
          $ref: "#/components/responses/UnavailableServerErrorResponse"

  /v1/orders/{orderId}/cancel:
    post:
      tags:
        - Orders
      summary: Отмена заказа
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
          example: "PM-bB00000001"
          description: "Идентификатор заказа в системе Магнита"
      requestBody:
        $ref: "#/components/requestBodies/OrderCancellationRequest"
      responses:
        200:
          description: Запрос принят.
        400:
          $ref: "#/components/responses/BadRequestErrorResponse"
        401:
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        404:
          $ref: "#/components/responses/NotFoundErrorResponse"
        500:
          $ref: "#/components/responses/InternalServerErrorResponse"
        503:
          $ref: "#/components/responses/UnavailableServerErrorResponse"

  /v1/orders/{orderId}/status:
    put:
      tags:
        - Orders
      summary: Изменение статуса заказа
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
          example: "PM-bB00000001"
          description: "Идентификатор заказа в системе Магнита"
      requestBody:
        $ref: "#/components/requestBodies/OrderChangeStatusRequest"
      responses:
        202:
          description: Запрос обновления заказа принят, но ещё не обработан.
        400:
          $ref: "#/components/responses/BadRequestErrorResponse"
        401:
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        404:
          $ref: "#/components/responses/NotFoundErrorResponse"
        500:
          $ref: "#/components/responses/InternalServerErrorResponse"
        503:
          $ref: "#/components/responses/UnavailableServerErrorResponse"

    get:
      tags:
        - Orders
      summary: Получение статуса заказа
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
          example: "PM-bB00000001"
          description: "Идентификатор заказа в системе Магнита"
      responses:
        200:
          $ref: "#/components/responses/OrderStatusResponse"
        400:
          $ref: "#/components/responses/BadRequestErrorResponse"
        401:
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        404:
          $ref: "#/components/responses/NotFoundErrorResponse"
        500:
          $ref: "#/components/responses/InternalServerErrorResponse"
        503:
          $ref: "#/components/responses/UnavailableServerErrorResponse"

  /v1/orders/{orderId}/event:
    post:
      tags:
        - Order Events
      summary: События по заказам от Партнера
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
          example: "PM-bB00000001"
          description: "Идентификатор заказа в системе Магнита"
      requestBody:
        $ref: "#/components/requestBodies/OrderNotificationRequest"
      responses:
        202:
          description: Запрос обновления заказа принят, но ещё не обработан.
        400:
          $ref: "#/components/responses/BadRequestErrorResponse"
        401:
          $ref: "#/components/responses/UnauthorizedErrorResponse"
        404:
          $ref: "#/components/responses/NotFoundErrorResponse"
        500:
          $ref: "#/components/responses/InternalServerErrorResponse"
        503:
          $ref: "#/components/responses/UnavailableServerErrorResponse"

  /v1/nomenclature/stores/{store_id}/prices:
    get:
      tags:
        - Nomenclature
      summary: "Информация по ценам товаров в ТО"
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: store_id
          required: true
          schema:
            type: string
          example: "123456"
          description: "Идентификатор ТО в системе Магнит"
      responses:
        200:
          $ref: "#/components/responses/StoresPricesResponse"
        400:
          $ref: "#/components/responses/BadRequestErrorResponseWithoutBody"
        401:
          $ref: "#/components/responses/UnauthorizedErrorResponseWithoutBody"
        403:
          $ref: "#/components/responses/ForbiddenErrorResponseWithoutBody"
        404:
          $ref: "#/components/responses/NotFoundErrorResponseWithoutBody"
        500:
          $ref: "#/components/responses/InternalServerErrorResponse"
        503:
          $ref: "#/components/responses/UnavailableServerErrorResponse"

  /v1/nomenclature/stores/{store_id}/stocks:
    get:
      tags:
        - Nomenclature
      summary: "Информация по остаткам товаров в ТО"
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: store_id
          required: true
          schema:
            type: string
          example: "123456"
          description: "Идентификатор ТО в системе Магнит"
      responses:
        200:
          $ref: "#/components/responses/StoresStocksResponse"
        400:
          $ref: "#/components/responses/BadRequestErrorResponseWithoutBody"
        401:
          $ref: "#/components/responses/UnauthorizedErrorResponseWithoutBody"
        403:
          $ref: "#/components/responses/ForbiddenErrorResponseWithoutBody"
        404:
          $ref: "#/components/responses/NotFoundErrorResponseWithoutBody"
        500:
          $ref: "#/components/responses/InternalServerErrorResponse"
        503:
          $ref: "#/components/responses/UnavailableServerErrorResponse"

  /v1/nomenclature/stores/{store_id}/stocks_delta:
    get:
      tags:
        - Nomenclature
      summary: "Информация по дельте остатков товара в ТО"
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: store_id
          required: true
          schema:
            type: string
          example: "123456"
          description: "Идентификатор ТО в системе Магнит"
        - in: query
          name: timestamp_from
          required: true
          schema:
            type: integer
          example: "1717577139"
          description: "Время с которого нужны изменения по остаткам в формате unix time в секундах"
      responses:
        200:
          $ref: "#/components/responses/StoresStocksResponse"
        400:
          $ref: "#/components/responses/BadRequestGoodStocksErrorResponse"
        401:
          $ref: "#/components/responses/UnauthorizedErrorResponseWithoutBody"
        403:
          $ref: "#/components/responses/ForbiddenErrorResponseWithoutBody"
        404:
          $ref: "#/components/responses/NotFoundErrorResponseWithoutBody"
        500:
          $ref: "#/components/responses/InternalServerErrorResponse"
        503:
          $ref: "#/components/responses/UnavailableServerErrorResponse"

  /:
    post:
      description: Базовый путь на стороне Партнера, на который будут отправляться различные уведомления от системы Магнит.
      summary: Получение событий от системы Магнит
      tags:
        - WebHookEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
            examples:
              Торговый объект заблокирован:
                value:
                  type: store_blocked
                  payload:
                    store_code: "012345"
                  created_at: 2023-12-31T00:00:00+03:00
              Торговый объект разблокирован:
                value:
                  type: store_unblocked
                  payload:
                    store_code: "012345"
                  created_at: 2023-12-31T00:00:00+03:00
              Обновление очереди сборки:
                value:
                  type: store_collect_queue_updated_v1
                  "payload":
                    {
                      "items":
                        [
                          {
                            "store_code": "000101",
                            "completed_at": "2023-12-31T00:00:00+03:00",
                            "updated_at": "2023-12-31T00:00:00+03:00",
                          },
                          {
                            "store_code": "000102",
                            "completed_at": "2023-12-31T00:00:00+03:00",
                            "updated_at": "2023-12-31T00:00:00+03:00",
                          },
                        ],
                    }
                  created_at: 2023-12-31T00:00:00+03:00
              Обновление статуса магазинов:
                value:
                  type: store_status_updated_v1
                  "payload":
                    {
                      "items":
                        [
                          {
                            "store_code": "012345",
                            "status": "store_blocked",
                            "updated_at": "2023-12-31T00:00:00+03:00",
                          },
                          {
                            "store_code": "123450",
                            "status": "store_unblocked",
                            "updated_at": "2023-12-31T00:00:00+03:00",
                          },
                        ],
                    }
                  created_at: 2023-12-31T00:00:00+03:00
        required: true
      responses:
        200:
          description: Запрос принят.
        400:
          description: Что-то не так в содержании запроса. Ориентируйтесь на описание ошибки, чтобы понять, что именно не так.
        401:
          description: В запросе не указан или указан несуществуюший, истекший токен авторизации.
        404:
          description: Запрашиваемый ресурс не найден. Проверьте адреса запросов, по которым обращается система партнера.
        500:
          description: Внутренняя ошибка сервера Партнера. Такая ошибка через некоторое время исчезнет сама собой.
        503:
          description: Внутренняя ошибка сервера Партнера. Такая ошибка через некоторое время исчезнет сама собой.

  /v1/last-mile/claims/create:
    post:
      security:
        - bearerAuth: []
      tags:
        - Last Mile
      operationId: CreateClaim
      description: "Создание заявки на доставку"
      parameters:
        - in: query
          name: request_id
          description: "Ключ идемпотентности запроса"
          required: true
          schema:
            $ref: "#/components/schemas/param.IdempotencyKey"
          x-oapi-codegen-extra-tags:
            validate: required,gt=10,lt=100
        - in: header
          name: X-Partner-ID
          description: "Идентификатор партнера из ГИС ГКЦ"
          required: true
          schema:
            $ref: "#/components/schemas/param.PartnerID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/request.CreateClaim"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response.CreateClaim"
          description: "OK"
        "400":
          description: "Bad Request"
        "500":
          description: "Internal Server Error"

  /v1/last-mile/claims/cancel:
    post:
      security:
        - bearerAuth: []
      tags:
        - Last Mile
      operationId: CancelClaim
      description: "Отменить заявку"
      parameters:
        - in: header
          name: X-Partner-ID
          description: "Идентификатор партнера из ГИС ГКЦ"
          required: true
          schema:
            $ref: "#/components/schemas/param.PartnerID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/request.CancelClaim"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response.CancelClaim"
          description: "OK"
        "400":
          description: "Bad Request"
        "500":
          description: "Internal Server Error"

  /v1/last-mile/claims/info:
    post:
      security:
        - bearerAuth: []
      tags:
        - Last Mile
      operationId: ClaimsInfo
      description: "Информация по заявкам"
      parameters:
        - in: header
          name: X-Partner-ID
          description: "Идентификатор партнера из ГИС ГКЦ"
          required: true
          schema:
            $ref: "#/components/schemas/param.PartnerID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/request.ClaimsInfo"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response.ClaimsInfo"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response.BadRequest"
        "409":
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response.Conflict"
        "500":
          description: "Internal Server Error"

  /v1/last-mile/claims/events:
    get:
      security:
        - bearerAuth: []
      tags:
        - Last Mile
      operationId: ClaimsEvents
      description: "События по заявкам"
      parameters:
        - in: query
          name: last_known_id
          description: |
            Идентификатор последнего события, обработанного клиентом.
            Если не передан, то будут выданы изменения, начиная с самого первого.
          required: false
          schema:
            $ref: "#/components/schemas/param.EventID"
        - in: query
          name: limit
          description: Максимальное количество событий в результатах.
          required: false
          schema:
            type: integer
            maximum: 1000
            default: 1000
          x-oapi-codegen-extra-tags:
            validate: lt=1000
        - in: header
          name: X-Partner-ID
          description: "Идентификатор партнера из ГИС ГКЦ"
          required: true
          schema:
            $ref: "#/components/schemas/param.PartnerID"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response.ClaimsEvents"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response.BadRequest"
        "500":
          description: "Internal Server Error"

  /v1/last-mile/claims/accept:
    post:
      security:
        - bearerAuth: []
      tags:
        - Last Mile
      operationId: AcceptClaim
      description: "Принять заявку на доставку после расчета стоимости"
      parameters:
        - in: header
          name: X-Partner-ID
          description: "Идентификатор партнера из ГИС ГКЦ"
          required: true
          schema:
            $ref: "#/components/schemas/param.PartnerID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/request.AcceptClaim"
      responses:
        "200":
          description: "OK"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response.BadRequest"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response.NotFound"
        "409":
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response.Conflict"
        "500":
          description: "Internal Server Error"

  /v1/last-mile/claims/update:
    patch:
      security:
        - bearerAuth: []
      tags:
        - Last Mile
      operationId: UpdateClaim
      description: "Обновление заявки на доставку"
      parameters:
        - in: header
          name: X-Partner-ID
          description: "Идентификатор партнера из ГИС ГКЦ"
          required: true
          schema:
            $ref: "#/components/schemas/param.PartnerID"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/request.UpdateClaims"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response.UpdateClaims"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response.BadRequest"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response.NotFound"
        "409":
          description: "Conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response.Conflict"
        "500":
          description: "Internal Server Error"

  /v1/partners/{partner_id}:
    get:
      security:
        - bearerAuth: []
      tags:
        - Last Mile
      operationId: GetPartner
      summary: Получение партнера
      description: "Получение партнера по его partner_id"
      parameters:
        - $ref: "#/components/parameters/PartnerID"
        - name: nomerge
          in: query
          description: "Флаг, определяющий получение смерженного конфига"
          required: false
          schema:
            type: boolean
      responses:
        "200":
          $ref: "#/components/responses/Partner"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

    post:
      security:
        - bearerAuth: []
      tags:
        - Last Mile
      operationId: UpdatePartner
      summary: Обновление конфига партнера
      description: "Обновить конфиг партнера по его partner_id"
      parameters:
        - $ref: "#/components/parameters/PartnerID"
      requestBody:
        $ref: "#/components/requestBodies/UpdatePartnerRequestBody"
      responses:
        "200":
          description: "OK"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/partners/{partner_id}/logzones/config:
    get:
      security:
        - bearerAuth: []
      tags:
        - Last Mile
      operationId: GetPartnerLogzoneConfig
      summary: Получение конфига партнера в логзоне
      description: "Получить конфиг партнера в логзоне по его partner_id"
      parameters:
        - $ref: "#/components/parameters/PartnerID"
        - $ref: "#/components/parameters/query.LogzoneConfigQueryFilter"
        - $ref: "#/components/parameters/query.Stype"
      responses:
        "200":
          $ref: "#/components/responses/Config"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

    post:
      security:
        - bearerAuth: []
      tags:
        - Last Mile
      operationId: UpdatePartnerLogzoneConfig
      summary: Обновление конфига партнера в логзоне
      description: "Обновить конфиг партнера в логзоне по его partner_id"
      parameters:
        - $ref: "#/components/parameters/PartnerID"
      requestBody:
        $ref: "#/components/requestBodies/UpdatePartnerLogzoneConfigV1"
      responses:
        "200":
          $ref: "#/components/responses/Config"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
        "500":
          $ref: "#/components/responses/ErrorResponse"

  /v1/rates/replace:
    post:
      security:
        - bearerAuth: []
      tags:
        - Last Mile
      operationId: ReplaceRates
      summary: Метод замены тарифов
      description: "Позволяет заменить текущие тарифы на новые"
      requestBody:
        $ref: "#/components/requestBodies/RatesReplace"
      responses:
        "200":
          $ref: "#/components/responses/OK"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /v1/magnit-post/pickup-points:
    get:
      security:
        - bearerAuth: []
      summary: Получить список пунктов выдачи заказов
      operationId: getPickupPoints
      description: Метод позволяет получить список активных пунктов выдачи заказов.
      parameters:
        - $ref: "#/components/parameters/pageNumber"
        - $ref: "#/components/parameters/pageSize"
        - $ref: "#/components/parameters/pickupPointKey"
        - $ref: "#/components/parameters/region"
        - $ref: "#/components/parameters/city"
      responses:
        "200":
          description: Список пунктов выдачи заказов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PickupPointsResponse"
        "401":
          description: Authorization Required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              example:
                message: Authorization Required
      tags:
        - Magnit Post
  /v1/magnit-post/orders:
    post:
      security:
        - bearerAuth: []
      operationId: createOrder
      summary: Создать заказ
      description: Метод позволяет создать новый заказ на доставку.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryOrderRequest"
      responses:
        "201":
          description: Заказ на доставку успешно создан в системе "Магнит Маркет"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryOrderResponse"
        "400":
          description: Заказ на доставку не может быть корректно создан. Переданы некорректные данные
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              example:
                message: PickupPoint c key 63425 не существует
        "401":
          description: Authorization Required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              example:
                message: Authorization Required
      tags:
        - Magnit Post
  /v1/magnit-post/orders/{trackingNumber}:
    parameters:
      - $ref: "#/components/parameters/trackingNumber"
    get:
      security:
        - bearerAuth: []
      operationId: getOrder
      summary: Получить заказ по trackingNumber
      description: Метод позволяет получить данные заказа по трек-номер.
      responses:
        "200":
          description: Информация о заказе в системе "Магнит Маркет"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryOrderResponse"
        "404":
          description: Заказ с указанным trackingNumber не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              example:
                message: Заказ с trackingNumber 325445758 не найден
        "401":
          description: Authorization Required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              example:
                message: Authorization Required
      tags:
        - Magnit Post
    delete:
      security:
        - bearerAuth: []
      operationId: deleteOrder
      summary: Отменить заказ по trackingNumber
      description: Метод позволяет отменить заказ по идентификатору.
      responses:
        "204":
          description: Заказ отменен
        "404":
          description: Заказ с указанным trackingNumber не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              example:
                message: Заказ с trackingNumber 325445758 не найден
        "400":
          description: Заказ с указанным trackingNumber не может быть отменен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              example:
                message: Заказ с trackingNumber 325445758 находится в статусе ISSUED и не может быть отменен.
        "401":
          description: Authorization Required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              example:
                message: Authorization Required
      tags:
        - Magnit Post
  /v1/magnit-post/orders/{trackingNumber}/status-history:
    parameters:
      - $ref: "#/components/parameters/trackingNumber"
    get:
      security:
        - bearerAuth: []
      operationId: getOrderStatusHistory
      summary: Получить историю статусов по заказу на доставку
      description: Метод позволяет получить историю изменения статусов заказа на доставку по trackingNumber.
      responses:
        "200":
          description: История изменения статусов заказа в системе "Магнит Маркет"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryOrderHistoryResponse"
        "404":
          description: Заказ с указанным trackingNumber не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              example:
                message: Заказ с trackingNumber 325445758 не найден
        "401":
          description: Authorization Required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              example:
                message: Authorization Required
      tags:
        - Magnit Post
  /v1/magnit-post/order-statuses:
    post:
      security:
        - bearerAuth: []
      operationId: getOrdersStatuses
      summary: Получить актуальные статусы по нескольким заказам
      description: Метод позволяет получить актуальные статусы заказов на доставку, передав список trackingNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryOrderStatusesRequest"
      responses:
        "200":
          description: Коллекция актуальных статусов по запрошенным заказам на доставку
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryOrderStatusesResponse"
        "401":
          description: Authorization Required
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorMessage"
              example:
                message: Authorization Required
      tags:
        - Magnit Post
  /v2/magnit-post/orders/estimate:
    post:
      security:
        - bearerAuth: []
      tags:
        - Magnit Post
      operationId: estimateOrder
      summary: Расчет срока и стоимости доставки
      description: Метод позволяет оценить время и стоимость доставки заказа.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EstimateOrderRequestBody"
      responses:
        "200":
          description: "OK"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/EstimateOrderResponseBody"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "401":
          description: "Unauthorized"
        "500":
          $ref: "#/components/responses/ErrorResponse"
  #magnit-market-seller-api-begin
  #magnit-market-seller-api-goods
  /seller/v1/categories:
    get:
      description: REST эндпоинт для получения списка активных категорий
      operationId: getActiveCategories
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExternalSellerCategoryDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
          description: Пример ошибочных ответов для всех http-статусов (не 2хх)
      security:
        - apiKeyAuth: []
          scopes:
            - mm:b2b:categories
            - mm:b2b:all
      summary: Получение списка категорий
      tags:
      - Magnit Market API - Категории
  /seller/v1/products/defined-characteristics:
    post:
      description: REST эндпоинт для получения списка характеристик
      operationId: getDefinedCharacteristics
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryCharacteristicsRequest"
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExternalSellerCharacteristicsDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
          description: Пример ошибочных ответов для всех http-статусов (не 2хх)
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:categories
        - mm:b2b:all
      summary: Получение списка характеристик
      tags:
      - Magnit Market API - Категории
  /seller/v1/products/dictionary:
    get:
      description: REST эндопинт для получения списка словарей
      operationId: getDictionaryValues
      parameters:
      - description: Идентификатор справочника
        in: query
        name: dictionary_id
        required: true
        schema:
          type: integer
          format: int64
      - description: "Тип справочника (например, DEFINED, PRODUCT, SKU)"
        in: query
        name: type
        required: true
        schema:
          type: string
      - description: Поисковый запрос для фильтрации значений справочника
        in: query
        name: search
        required: false
        schema:
          type: string
          default: ""
      - description: Номер страницы для пагинации
        in: query
        name: page
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - description: Количество элементов на странице
        in: query
        name: page_size
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/DictionaryResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
          description: Пример ошибочных ответов для всех http-статусов (не 2хх)
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:categories
        - mm:b2b:all
      summary: Получение списка словарей
      tags:
      - Magnit Market API - Категории
  /seller/v1/products/sku:
    post:
      description: REST эндпоинт для создания списка СКУ
      operationId: createSku
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSkuRequest"
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CreateSkuResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
          description: Пример ошибочных ответов для всех http-статусов (не 2хх)
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:products
        - mm:b2b:all
      summary: Создание СКУ
      tags:
      - Magnit Market API - Товары
  /seller/v1/products/sku/list:
    post:
      description: REST эндпоинт для получения списка СКУ
      operationId: getSkuList
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SkuListRequest"
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SkuListResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
          description: Пример ошибочных ответов для всех http-статусов (не 2хх)
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:products
        - mm:b2b:all
      summary: Получение списка СКУ
      tags:
      - Magnit Market API - Товары
  /seller/v1/products/sku/price:
    post:
      description: REST эндпоинт для обновления цен
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PricesRequest"
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SkuInfoResponsePriceUpdateResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
          description: Пример ошибочных ответов для всех http-статусов (не 2хх)
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:prices
        - mm:b2b:all
      summary: Обновление цен
      tags:
      - Magnit Market API - Цены
  /seller/v1/products/sku/price/info:
    post:
      description: REST эндпоинт для получения данных по ценам
      operationId: getPriceInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SkuInfoRequest"
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SkuInfoResponsePriceInfoResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
          description: Пример ошибочных ответов для всех http-статусов (не 2хх)
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:prices
        - mm:b2b:all
      summary: Получение данных по ценам
      tags:
      - Magnit Market API - Цены
  /seller/v1/products/sku/shops/{shop_id}/short/list:
    post:
      description: REST эндпоинт для получения списка СКУ с основной информацией по
        СКУ
      operationId: getShortSkuInfoList
      parameters:
      - description: Идентификатор магазина
        in: path
        name: shop_id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShortSkuInfoRequest"
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ShortSkuInfoResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
          description: Пример ошибочных ответов для всех http-статусов (не 2хх)
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:products
        - mm:b2b:all
      summary: Получение списка СКУ с основной информацией
      tags:
      - Magnit Market API - Товары
  /seller/v1/products/sku/shops/{shop_id}/sku/archive:
    post:
      description: REST эндпоинт для архивации списка СКУ
      operationId: archiveSkuList
      parameters:
      - description: Идентификатор магазина
        in: path
        name: shop_id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SkuArchiveRequest"
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SkuInfoResponseSkuArchiveResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
          description: Пример ошибочных ответов для всех http-статусов (не 2хх)
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:products
        - mm:b2b:all
      summary: Архивация СКУ
      tags:
      - Magnit Market API - Товары
  /seller/v1/products/sku/shops/{shop_id}/sku/delete:
    post:
      description: REST эндпоинт для удаления продукта
      operationId: deleteProduct
      parameters:
      - description: Идентификатор магазина
        in: path
        name: shop_id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductDeleteRequest"
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SkuInfoResponseProductDeleteResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
          description: Пример ошибочных ответов для всех http-статусов (не 2хх)
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:products
        - mm:b2b:all
      summary: Удаление продукта
      tags:
      - Magnit Market API - Товары
  /seller/v1/products/sku/shops/{shop_id}/sku/unarchive:
    post:
      description: REST эндпоинт для разархивации списка СКУ
      operationId: recoverSkuList
      parameters:
      - description: Идентификатор магазина
        in: path
        name: shop_id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SkuArchiveRequest"
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SkuInfoResponseSkuArchiveResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
          description: Пример ошибочных ответов для всех http-статусов (не 2хх)
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:products
        - mm:b2b:all
      summary: Разархивация СКУ
      tags:
      - Magnit Market API - Товары
  /seller/v1/products/sku/shops/{shop_id}/sku/update:
    post:
      description: REST эндпоинт для обновления списка СКУ
      operationId: updateSku
      parameters:
      - in: path
        name: shop_id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSkuRequest"
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CreateSkuResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
          description: Пример ошибочных ответов для всех http-статусов (не 2хх)
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:products
        - mm:b2b:all
      summary: Обновление СКУ
      tags:
      - Magnit Market API - Товары
  /seller/v1/products/sku/stocks:
    post:
      description: REST эндпоинт для обновления остатков
      operationId: updateStocks
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StockRequest"
        required: true
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
          description: Пример ошибочных ответов для всех http-статусов (не 2хх)
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:stocks
        - mm:b2b:all
      summary: Обновление остатков
      tags:
      - Magnit Market API - Остатки
  /seller/v1/products/sku/stocks/info:
    post:
      description: REST эндпоинт для получения информации об остатках
      operationId: getStocksInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SkuInfoRequest"
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SkuInfoResponseStockInfoResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
          description: Пример ошибочных ответов для всех http-статусов (не 2хх)
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:stocks
        - mm:b2b:all
      summary: Получение информации об остатках
      tags:
      - Magnit Market API - Остатки
  /seller/v1/products/sku/tasks/{task_id}/status:
    get:
      description: REST эндпоинт для получения статуса задачи создания СКУ
      operationId: getTaskStatus
      parameters:
      - description: Идентификатор задачи создания СКУ
        in: path
        name: task_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskStatusResponse"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponse"
          description: Пример ошибочных ответов для всех http-статусов (не 2хх)
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:products
        - mm:b2b:all
      summary: Получение статуса задачи создания СКУ
      tags:
      - Magnit Market API - Товары
  /seller/v1/shops:
    get:
      description: REST эндпоинт для получения списка активных магазинов
      operationId: getShops
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShopDto"
          description: OK
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Пример ошибочных ответов для всех http-статусов (не 2хх)
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:shops
        - mm:b2b:all
      summary: Получение списка магазинов
      tags:
      - Magnit Market API - Магазины
  #magnit-market-seller-api-lms
  /seller/v1/orders/list/unprocessed:
    post:
      operationId: ordersUnprocessedMarket
      tags:
        - Magnit Market API - Задания на сборку
      summary: Список необработанных заданий на сборку
      description: >
        Возвращает список необработанных заданий на сборку за указанный период
        времени.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceOrdersUnprocessedRequest'
        required: true
      responses:
        '200':
          description: Список заданий на сборку
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceOrdersUnprocessedResponse'
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/orders/list:
    post:
      operationId: ordersListMarket
      tags:
        - Magnit Market API - Задания на сборку
      summary: Список заданий на сборку
      description: |
        Возвращает список заданий на сборку за указанный период времени.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceOrdersListRequest'
        required: true
      responses:
        '200':
          description: Список заданий на сборку
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceOrdersListResponse'
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/orders/cancel-items:
    post:
      operationId: ordersCancelItemsMarket
      tags:
        - Magnit Market API - Задания на сборку
      summary: Отмена части товаров
      description: |
        Отменяемый товар не должен быть распределен по посылкам.

        ⚠️ Это действие нельзя отменить.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceOrderCancelItemsRequest'
        required: true
      responses:
        '200':
          description: Актуальные информация о задании на сборку
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceOrderCancelItemsResponse'
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/orders/cancel:
    post:
      operationId: ordersCancelMarket
      tags:
        - Magnit Market API - Задания на сборку
      summary: Отмена задания на сборку
      description: |
        ⚠️ Задание может быть отменено, до перевода в статус `ASSEMBLED`.

        ⚠️ Это действие нельзя отменить.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceOrderCancelRequest'
        required: true
      responses:
        '200':
          description: Запрос успешно выполнен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceOrderCancelResponse'
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/orders/complete:
    post:
      operationId: ordersCompleteMarket
      tags:
        - Magnit Market API - Задания на сборку
      summary: Подтверждение сборки
      description: >
        Необходимо вызвать этот метод, чтобы посылки можно было добавить в
        отгрузку
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceOrderCompleteRequest'
        required: true
      responses:
        '200':
          description: Список посылок
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceOrderCompleteResponse'
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/orders/parcels:
    post:
      operationId: ordersParcelsMarket
      tags:
        - Magnit Market API - Задания на сборку
      summary: Передать разбиение на посылки
      description: |
        Позволяет передать разбиение всего задания на посылки.
        Метод можно использовать если задания на сборку находится в статус `NEW`
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceOrderParcelsRequest'
        required: true
      responses:
        '200':
          description: Посылки и их идентификаторы
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceOrderParcelsResponse'
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/parcels/list:
    post:
      operationId: parcelsListMarket
      tags:
        - Magnit Market API - Задания на сборку
      summary: Список посылок
      description: |
        Возвращает список посылок за указанный период времени.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceParcelsListRequest'
      responses:
        '200':
          description: Список посылок
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceParcelsListResponse'
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/parcels/set-marking:
    post:
      operationId: parcelsMarkingMarket
      tags:
        - Magnit Market API - Задания на сборку
      summary: Передать маркировку товаров внутри посылки
      description: >
        Передать маркировку можно до подтверждения сборки задания.


        ⚠️ Маркетплейс не производит проверку и вывод марок из оборота.


        ⚠️ Необходимо передавать маркировку сразу на все единицы товара (т.е.
        равным quantity этого товара в посылке).
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceParcelsAddMarkingRequest'
      responses:
        '200':
          description: Запрос успешно выполнен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceParcelsAddMarkingResponse'
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/parcels/get-labels:
    post:
      operationId: parcelsGetLabelsMarket
      tags:
        - Magnit Market API - Задания на сборку
      summary: Получить этикетки для посылок
      description: |
        Метод возвращает этикетки для посылок в виде одного файла
      parameters:
        - $ref: '#/components/parameters/MarketplaceDocumentAccept'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceParcelsLabelsRequest'
      responses:
        '200':
          description: Запрос успешно выполнен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceParcelsLabelsResponse'
            application/pdf:
              schema:
                type: string
                format: binary
                example: |-
                  %PDF-1.3
                  3 0 obj
                  ...
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/parcels/cancel:
    post:
      operationId: parcelsCancelMarket
      tags:
        - Magnit Market API - Задания на сборку
      summary: Отменить посылку вместе с товарами
      description: >
        Метод позволяет отменить собранную посылку. При этом также отменяются
        товары, находящиеся в ней.

         ⚠️ Это действие нельзя отменить.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceParcelsCancelRequest'
      responses:
        '200':
          description: Посылка успешно отменена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceParcelsCancelResponse'
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/parcels/create:
    post:
      operationId: parcelsCreateMarket
      tags:
        - Magnit Market API - Задания на сборку
      summary: Создание посылки
      description: |
        Метод позволяет передать состав одной посылки.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceParcelsCreateRequest'
      responses:
        '200':
          description: Посылка успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceParcelsCreateResponse'
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/parcels/unpack:
    post:
      operationId: parcelsUnpackMarket
      tags:
        - Magnit Market API - Задания на сборку
      summary: Удаляет посылку
      description: >
        Метод позволяет удалить посылку. Для этого посылка должна находиться в
        статусе `NEW`.


        Товары из удаляемой посылки можно распределить повторно.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceParcelsUnpackRequest'
      responses:
        '200':
          description: Посылка успешно удалена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceParcelsUnpackResponse'
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/shipments/list:
    post:
      operationId: shipmentsListMarket
      tags:
        - Magnit Market API - Отгрузка посылок
      summary: Список отгрузок
      description: |
        Возвращает список отгрузок за указанный период времени.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceShipmentListRequest'
      responses:
        '200':
          description: Список отгрузок
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceShipmentListResponse'
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/shipments/add-parcels:
    post:
      operationId: shipmentsAddParcelsMarket
      tags:
        - Magnit Market API - Отгрузка посылок
      summary: Добавить посылки к отгрузке
      description: |
        Добавляет посылки к формируемой отгрузке.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceShipmentAddParcelsRequest'
        required: true
      responses:
        '200':
          description: Актуальный состав отгрузки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceShipmentAddParcelsResponse'
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/shipments/remove-parcels:
    post:
      operationId: shipmentsRemoveParcelsMarket
      tags:
        - Magnit Market API - Отгрузка посылок
      summary: Удалить посылки из отгрузки
      description: |
        Удаляет посылки из формируемой отгрузки.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceShipmentRemoveParcelsRequest'
        required: true
      responses:
        '200':
          description: Актуальный состав отгрузки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceShipmentRemoveParcelsResponse'
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/shipments/confirm:
    post:
      operationId: shipmentsConfirmMarket
      tags:
        - Magnit Market API - Отгрузка посылок
      summary: Подтвердить отгрузку
      description: |
        Завершить формирование отгрузки.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceShipmentsConfirmRequest'
        required: true
      responses:
        '200':
          description: Состав отгрузки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceShipmentsConfirmResponse'
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/shipments/cancel:
    post:
      operationId: shipmentsCancelMarket
      tags:
        - Magnit Market API - Отгрузка посылок
      summary: Отменить отгрузку
      description: >
        Отменяет отгрузку. Отменить отгрузку можно только на статусе
        `CONFIRMED`
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceShipmentsCancelRequest'
        required: true
      responses:
        '200':
          description: Состав отгрузки
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceShipmentsCancelResponse'
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  /seller/v1/shipments/get-documents:
    post:
      operationId: shipmentsGetDocumentsMarket
      tags:
        - Magnit Market API - Отгрузка посылок
      summary: Получить документы по отгрузке
      description: |
        Возвращает выбранный документ для отгрузки
      parameters:
        - $ref: '#/components/parameters/MarketplaceDocumentAccept'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketplaceShipmentGetDocumentsRequest'
      responses:
        '200':
          description: Документ по отгрузке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketplaceShipmentGetDocumentsResponse'
            application/pdf:
              schema:
                type: string
                format: binary
                example: |-
                  %PDF-1.3
                  3 0 obj
                  ...
        '400':
          $ref: '#/components/responses/Marketplace400'
        '403':
          $ref: '#/components/responses/Marketplace403'
        '404':
          $ref: '#/components/responses/Marketplace404'
        '500':
          $ref: '#/components/responses/Marketplace500'
      security:
      - apiKeyAuth: []
        scopes:
        - mm:b2b:orders-processing
        - mm:b2b:all
  #magnit-market-seller-api-end
components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT # optional, arbitrary value for documentation purposes
    apiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key

  parameters:
    trackingNumber:
      in: path
      name: trackingNumber
      required: true
      description: Трек-номер заказа.
      schema:
        type: string
    pageNumber:
      name: page
      in: query
      required: true
      description: Номер страницы, начинающийся с единицы (1..N)
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 1
    pageSize:
      name: size
      in: query
      required: true
      description: Размер возвращаемой страницы
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 1000
        default: 100
    pickupPointKey:
      name: key
      in: query
      description: Ключ пункта выдачи заказа
      required: false
      schema:
        type: string
        example: "63933"
    region:
      name: region
      in: query
      description: Регион ПВЗ
      required: false
      schema:
        type: string
        example: "Татарстан"
    city:
      name: city
      in: query
      description: Город ПВЗ
      required: false
      schema:
        type: string
        example: "Казань"
    MarketplaceDocumentAccept:
      name: Accept
      in: header
      description: |
        Выбранный формат получения ответа (по умолчанию `application/json`)
      required: false
      schema:
        type: string
        default: application/json
        enum:
          - application/json
          - application/pdf
    PartnerID:
      in: path
      name: partner_id
      description: "Идентификатор партнера"
      required: true
      schema:
        type: string
        format: uuid
        x-go-type: uuid.UUID
        x-go-type-import:
          path: github.com/gofrs/uuid/v5
    query.Stype:
      description: "Тип настроек в логзонах"
      in: query
      name: stype
      style: form
      explode: true
      schema:
        $ref: "#/components/schemas/SettingsType"
    query.LogzoneConfigQueryFilter:
      description: "Критерий выборки логзоны"
      in: query
      name: by
      style: form
      required: true
      explode: true
      schema:
        $ref: "#/components/schemas/LogzoneConfigQueryFilter"

  schemas:
    StoresPricesItemsV1:
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/StoresPricesItemV1"

    StoresPricesItemV1:
      required:
        - good_id
        - base
      type: object
      properties:
        good_id:
          type: string
          example: "13234864"
          description: "Идентификатор товара в системе Магнит"
        base:
          $ref: "#/components/schemas/StoresBasePriceV1"
        action:
          $ref: "#/components/schemas/StoresActionPriceV1"

    StoresBasePriceV1:
      required:
        - value
        - currency
      description: "Базовая цена товара"
      properties:
        value:
          type: integer
          description: "Цена в копейках"
          example: 29999
        currency:
          $ref: "#/components/schemas/CurrencyEnum"

    StoresActionPriceV1:
      required:
        - value
        - currency
        - finished_at
      description: "Акционная цена товара"
      properties:
        value:
          type: integer
          description: "Цена в копейках"
          example: 29999
        currency:
          $ref: "#/components/schemas/CurrencyEnum"
        started_at:
          type: string
          description: "Дата начала действия акционной цены в формате RFC3399"
          example: "2023-12-01T00:00:00+03:00"
        finished_at:
          type: string
          description: "Дата окончания действия акционной цены в формате RFC3399"
          example: "2023-12-30T00:00:00+03:00"

    StoresStocksItemsV1:
      required:
        - timestamp
        - items
      type: object
      properties:
        timestamp:
          type: integer
          description: "Дата запроса информации об остатках в unix time в секундах"
          example: 1717590140
        items:
          type: array
          items:
            $ref: "#/components/schemas/StoresStockItemV1"

    StoresStockItemV1:
      required:
        - good_id
        - quantity
      type: object
      properties:
        good_id:
          type: string
          description: "Идентификатор товара в системе Магнит"
          example: "123456"
        quantity:
          type: number
          description: "Остаток товара по товарной позиции в штуках. Для весового товара вес передается в килограммах"
          example: 500

    Event:
      required:
        - type
        - created_at
      type: object
      properties:
        type:
          $ref: "#/components/schemas/EventEnum"
        payload:
          oneOf:
            - $ref: "#/components/schemas/StoreBlockedEvent"
            - $ref: "#/components/schemas/StoreUnblockedEvent"
            - $ref: "#/components/schemas/StoreStatusUpdatedV1"
            - $ref: "#/components/schemas/StoreCollectQueueUpdatedV1"
        created_at:
          type: string
          title: Время возникновения события
          description: "Время возникновения события в RFC3339 с указанием часового пояса"
          example: "2023-12-31T00:00:00+03:00"

    EventEnum:
      type: string
      description: Тип события
      enum:
        - "store_blocked"
        - "store_unblocked"
        - "store_collect_queue_updated_v1"
        - "store_status_updated_v1"

    StoreStatusUpdatedV1:
      title: Набор актуальных статусов магазинов
      description: Магазины изменили статус работы
      type: object
      required:
        - items
      properties:
        items:
          $ref: "#/components/schemas/StoreStatusUpdatedItemV1"

    StoreStatusUpdatedItemV1:
      title: Обновление статуса магазина
      description: Магазин изменил статус работы
      type: object
      required:
        - store_code
        - status
      properties:
        store_code:
          type: string
          example: "012345"
          description: "Идентификатор магазина в системе Магнит."
        status:
          $ref: "#/components/schemas/StoreStatusEnum"
        updated_at:
          $ref: "#/components/schemas/Datetime"

    Datetime:
      type: string
      description: "Дата в формате RFC3339 с указанием часового пояса"
      example: "2023-12-31T00:00:00+03:00"

    StoreStatusEnum:
      type: string
      description: Статус магазина
      enum:
        - "store_blocked"
        - "store_unblocked"

    StoreBlockedEvent:
      title: Магазин заблокирован
      description: Событие блокировки магазина
      type: object
      required:
        - store_code
      properties:
        store_code:
          type: string
          example: "123456"
          description: "Идентификатор магазина в системе Магнит."

    StoreUnblockedEvent:
      title: Магазин разблокирован
      description: Событие разблокировки магазина
      type: object
      required:
        - store_code
      properties:
        store_code:
          type: string
          example: "123456"
          description: "Идентификатор магазина в системе Магнит."

    StoreBlockingReasonEnum:
      type: string
      description: Причина блокировки магазина в системе Магнит
      enum:
        - "REVISION"
        - "TECHNICAL_PROBLEMS"
        - "TOO_BUSY"

    AuthRequest:
      required:
        - client_id
        - client_secret
      type: object
      properties:
        client_id:
          type: string
          description: Идентификатор партнера. Выдается по запросу
        client_secret:
          type: string
          description: Секретный ключ партнера. Выдается по запросу

    AuthSuccessResponse:
      description: "Успешная авторизация"
      required:
        - access_token
        - expires_in
      type: object
      properties:
        access_token:
          type: string
          description: Токен доступа
        expires_in:
          type: string
          description: Время истечения токена Unix Timestamp
        created_at:
          type: string
          description: Время создания токена Unix Timestamp, если текущий токен еще не истек

    OrderRequest:
      type: object
      required:
        - original_order_id
        - store_code
        - customer
        - collect
        - price
        - cart
      properties:
        original_order_id:
          type: string
          description: "Идентификатор заказа в системе партнера"
        store_code:
          type: string
          example: "123456"
          description: "Идентификатор магазина в системе Магнит. Используется для отправки заказа на сборку"
        customer:
          $ref: "#/components/schemas/Customer"
        delivery:
          oneOf:
            - $ref: "#/components/schemas/DeliveryPartner"
            - $ref: "#/components/schemas/DeliveryMagnit"
        collect:
          $ref: "#/components/schemas/Collect"
        cart:
          $ref: "#/components/schemas/CartRequest"
        price:
          $ref: "#/components/schemas/OrderPrice"
        comment:
          type: string
          description: "До 1000 символов"

    Order:
      type: object
      required:
        - original_order_id
        - store_code
        - status
        - cart
        - price
      properties:
        original_order_id:
          type: string
          description: "Идентификатор заказа в системе партнера"
        store_code:
          type: string
          example: "123456"
          description: "Идентификатор магазина в системе Магнит. Используется для отправки заказа на сборку"
        status:
          $ref: "#/components/schemas/OrderStatus"
        cart:
          $ref: "#/components/schemas/Cart"
        collect:
          $ref: "#/components/schemas/OrderCollect"
        price:
          $ref: "#/components/schemas/OrderPrice"
        comment:
          type: string
          description: "До 1000 символов"

    OrderStatusResponse:
      type: object
      required:
        - status
      properties:
        status:
          $ref: "#/components/schemas/OrderStatus"

    OrderStatus:
      type: object
      required:
        - code
        - updated_at
      properties:
        code:
          $ref: "#/components/schemas/OrderStatusEnum"
        reason:
          $ref: "#/components/schemas/OrderCancellationReasonEnum"
        updated_at:
          type: string
          description: "Дата последнего обновления статуса в RFC3339 с указанием часового пояса"
          example: "2023-12-31T00:00:00+03:00"

    OrderChangeStatus:
      type: object
      required:
        - code
        - updated_at
      properties:
        code:
          $ref: "#/components/schemas/OrderStatusEnum"
        updated_at:
          type: string
          description: "Дата последнего обновления статуса в RFC3339 с указанием часового пояса"
          example: "2023-12-31T00:00:00+03:00"

    OrderChangeRequestStatus:
      type: object
      required:
        - code
        - updated_at
      properties:
        code:
          $ref: "#/components/schemas/OrderChangeStatusRequestEnum"
        updated_at:
          type: string
          description: "Дата последнего обновления статуса в RFC3339 с указанием часового пояса"
          example: "2023-12-31T00:00:00+03:00"

    OrderPaymentStatus:
      type: string
      enum:
        - NOT_PAID
        - PAID

    OrderPaymentType:
      type: string
      enum:
        - PREPAID
        - POSTPAID

    OrderPaymentMethod:
      type: string
      enum:
        - CASH_ON_DELIVERY
        - CARD_ON_DELIVERY
        - SBP
        - EXTERNAL_CERTIFICATE

    Comments:
      type: object
      properties:
        customerComment:
          type: string
          description: Комментарий покупателя
        vendorComment:
          type: string
          description: Комментарий поставщика, например код

    Customer:
      description: "Информация о клиенте. Используется сборщиком для согласования замен"
      type: object
      required:
        - phone
        - name
      properties:
        name:
          type: string
          description: "Имя клиента в сервисе партнера. Используется для обращений к клиенту"
          example: "Иванов Иван Иванович"
        phone:
          type: string
          description: "Номер телефона для связи с клиентом в международном формате. Состоит из частей +<код страны><номер>. Используется для связи сборщика с клиентом и согласования замен."
          example: "+79031111111 или +74652516489 доб. 123456 или 84652516489 доб. 123456"

    Delivery:
      description: "Информация о доставке."
      type: object
      properties:
        time_slot:
          $ref: "#/components/schemas/DeliveryTimeSlot"
    DeliveryStatus:
      type: string
      enum:
        - in_progress
        - delivered

    DeliveryPartner:
      type: object
      description: "Доставка курьерами партнера"
      properties:
        time_slot:
          $ref: "#/components/schemas/DeliveryTimeSlot"

    DeliveryMagnit:
      type: object
      description: "Доставка курьерами Магнита"
      required:
        - address
        - price
        - coordinates
      properties:
        time_slot:
          $ref: "#/components/schemas/DeliveryTimeSlot"
        price:
          $ref: "#/components/schemas/DeliveryPrice"
        coordinates:
          $ref: "#/components/schemas/DeliveryCoordinates"
        address:
          $ref: "#/components/schemas/DeliveryAddress"

    DeliveryPrice:
      type: object
      description: "Стоимость доставки"
      required:
        - base
      properties:
        base:
          $ref: "#/components/schemas/DeliveryBasePrice"
    DeliveryTime:
      type: object
      required:
        - expected_datetime
      properties:
        expected_datetime:
          type: string
          description: "Ожидаемая клиентом дата доставки в RFC3339 с указанием часового пояса"
          example: "2023-12-31T00:00:00+03:00"

    DeliveryCoordinates:
      type: object
      required:
        - lat
        - lng
      properties:
        lat:
          type: number
          description: "Координата широты куда необходимо доставить заказ"
          example: 55.878315
        lng:
          type: number
          description: "Координата долготы куда необходимо доставить заказ"
          example: 37.65372

    DeliveryAddress:
      type: object
      required:
        - city
        - building
      properties:
        city:
          type: string
          description: "Город, максимальная длина строки 100 символов"
          example: "Москва"
        street:
          type: string
          description: "Улица, максимальная длина строки 100 символов"
          example: "Сухонская"
        building:
          type: string
          description: "Номер дома, максимальная длина строки 10 символов"
          example: "11"
        entrance:
          type: string
          description: "Подъезд, максимальная длина строки 10 символов"
          example: "1"
        floor:
          type: string
          description: "Этаж, максимальная длина строки 10 символов"
          example: "2"
        flat:
          type: string
          description: "Квартира, максимальная длина строки 10 символов"
          example: "202"
        intercom:
          type: string
          description: "Домофон, максимальная длина строки 100 символов"
          example: "202"
        full:
          type: string
          description: "Полный адрес, максимальная длина строки 255 символов"
          example: "Москва, ул. Сухонская, д.11, кв. 202"

    DeliveryTimeSlot:
      type: object
      required:
        - from
        - to
      properties:
        from:
          type: string
          description: "Ожидаемая клиентом начальная дата-время доставки в RFC3339 с указанием часового пояса"
          example: "2023-12-31T09:00:00+03:00"
        to:
          type: string
          description: "Ожидаемая клиентом конечная дата-время доставки в RFC3339 с указанием часового пояса"
          example: "2023-12-31T10:00:00+03:00"

    DeliveryType:
      description: "Тип доставки заказа. Используется для маршрутизации заказа."
      type: string
      enum:
        - PICKUP
        - COURIER

    IssueOrderCreateResponse:
      description: "Раздел выдачи при создании заказа. Код выдачи заказов включается для партнеров по запросу."
      type: object
      required:
        - strategy
      properties:
        strategy:
          $ref: "#/components/schemas/IssueStrategyEnum"
        payload:
          oneOf:
            - $ref: "#/components/schemas/IssuePayloadEacTakerToCollect"

    IssuePayloadEacTakerToCollect:
      description: "Полезная нагрузка при получении заказа по коду выдачи"
      type: object
      required:
        - eac
      properties:
        eac:
          $ref: "#/components/schemas/EAC"

    EAC:
      description: "ЭАПП - Электронный акт-приёма передачи, код выдачи"
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: Код подтверждения ЭАПП (для типа taker_to_collect)

    Collect:
      description: "Информация о сборке."
      type: object
      required:
        - strategy
      properties:
        strategy:
          $ref: "#/components/schemas/CollectReplacementStrategyEnum"
        desired_at:
          description: "Желаемое время сборки заказа в RFC3339 с указанием часового пояса"
          type: string
          example: "2023-12-31T10:00:00+03:00"

    OrderCollect:
      description: "Информация о сборке заказа после его создания."
      type: object
      properties:
        expected_at:
          type: string
          description: "Дата ожидаемой сборки заказа в RFC3339 с указанием часового пояса"
          example: "2023-12-31T00:00:00+03:00"

    CollectTypeEnum:
      type: string
      enum:
        - MAGNIT
        - PARTNER

    CollectReplacementStrategyEnum:
      description: "call_to_customer - всегда звонить клиенту для согласования"
      type: string
      enum:
        - call_to_customer

    Promo:
      type: object
      required:
        - type
        - value
      properties:
        type:
          $ref: "#/components/schemas/PromoTypeEnum"
        name:
          type: string
          example: "Первый заказ"
        value:
          type: string
          example: "10, SORRYCODE"

    PromoTypeEnum:
      type: string
      enum:
        - "PROMOCODE"
        - "PENSIONER"
        - "EXAMPLE"

    Payment:
      type: object
      properties:
        status:
          type: string
          example: "paid"

    OrderPrice:
      description: "Сумма заказа"
      type: object
      required:
        - total
      properties:
        total:
          $ref: "#/components/schemas/OrderTotalPrice"

    CartRequest:
      description: "Корзина заказа"
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/CartItemRequest"

    Cart:
      description: "Корзина заказа"
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/CartItem"

    CartItemRequest:
      type: object
      required:
        - good_id
        - name
        - unit
        - qnty
        - price
      properties:
        good_id:
          description: "Артикул товара в системе Магнит"
          type: string
          example: "0000000000"
        name:
          description: "Название товара в системе партнера"
          type: string
          example: "Огурцы"
        qnty:
          description: "Количество товара в граммах для весовых или в штуках для штучных"
          type: integer
          example: 1500
        price:
          $ref: "#/components/schemas/ProductPrice"
        unit:
          $ref: "#/components/schemas/UnitEnum"

    CartItem:
      type: object
      required:
        - good_id
        - name
        - unit
        - qnty
        - price
      properties:
        good_id:
          description: "Артикул товара в системе Магнит"
          type: string
          example: "0000000000"
        name:
          description: "Название товара в системе партнера"
          type: string
          example: "Огурцы"
        qnty:
          description: "Количество товара в граммах для весовых или в штуках для штучных"
          type: integer
          example: 1500
        price:
          $ref: "#/components/schemas/ProductPrice"
        unit:
          $ref: "#/components/schemas/UnitEnum"
        marking:
          description: "Информация о маркировке единиц товара."
          type: array
          items:
            $ref: "#/components/schemas/Marking"

    DeliveryBasePrice:
      type: object
      description: "Стоимость доставки без скидок"
      required:
        - value
      properties:
        value:
          type: integer
          example: "10000"
          description: "Стоимость в копейках"

    BasePrice:
      type: object
      required:
        - value
      properties:
        value:
          type: integer
          example: "10000"
          description: "Стоимость в копейках"

    OrderTotalPrice:
      description: Полная стоимость заказа в копейках. Сколько денег будет списано с клиента за заказ.
      allOf:
        - $ref: "#/components/schemas/BasePrice"

    ProductPrice:
      description: "Стоимость одной позиции, включая скидки, если они есть"
      type: object
      required:
        - original
      properties:
        original:
          $ref: "#/components/schemas/BasePrice"

    TaxTypeEnum:
      type: string
      description: "Ставка НДС"
      enum:
        - "no_vat"
        - "vat_0"
        - "vat_10"
        - "vat_20"
        - "vat_10/110"
        - "vat_20/120"

    CurrencyEnum:
      description: "Валюта"
      type: string
      enum:
        - "RUB"

    VatEnum:
      type: string
      enum:
        - "NO_VAT"
        - "VAT_0"
        - "VAT_10_110"
        - "VAT_20_120"
        - "VAT_18_118"

    ErrorCodeEnum:
      type: string
      enum:
        - "SOME_ERROR"
        - "FORBIDDEN"
        - "ORDER_NOT_FOUND"
        - "INTERNAL_ERROR"
        - "ARTICLE_NOT_FOUND"

    UnitEnum:
      description: "Размерность товара, весовой или штучный"
      type: string
      enum:
        - "weight"
        - "apiece"

    OrderStatusEnum:
      type: string
      enum:
        - "order_created"
        - "order_on_work"
        - "order_ready"
        - "order_issued"
        - "order_delivered"
        - "order_cancelled"
        - "order_client_refused"

    OrderChangeStatusRequestEnum:
      type: string
      enum:
        - "order_delivered"

    OrderNotificationTypeEnum:
      type: string
      enum:
        - "order_paid"
        - "order_ready_to_pick_up"
        - "order_picked_up"

    Stores:
      type: object
      properties:
        stores:
          type: array
          items:
            $ref: "#/components/schemas/Store"

    Store:
      type: object
      properties:
        name:
          type: string
        code:
          type: string
        flags:
          $ref: "#/components/schemas/StoreFlags"

    StoreFlags:
      type: object
      properties:
        alcohol:
          type: boolean
        pickup:
          type: boolean

    ProductReplacement:
      type: object
      required:
        - old_article
        - new_article
      properties:
        old_article:
          type: string
        new_article:
          type: string
          description: артикул

    Marking:
      required:
        - qnty
        - cis
      type: object
      properties:
        qnty:
          type: integer
          description: "Количество товара в штуках или граммах, если товар весовой"
        cis:
          type: string
          description: "Код «Честного знака» без криптохвоста."
          example: '0104603731968500215jMa!Q\\u001d93rh1e'
        request:
          $ref: "#/components/schemas/MarkingRequest"

    MarkingRequest:
      description: "Объект запроса валидации марки"
      properties:
        id:
          type: string
          description: Уникальный идентификатор запроса валидации марки
          example: "4cd5d966-000a-00aa-aaa0-58f392fb380e"
        timestamp:
          type: number
          description: Дата и время по UTC с точностью до миллисекунд формирования запроса валидации марки.
          example: 1714112888596

    OrderChangeStatusRequest:
      type: object
      required:
        - status
      properties:
        status:
          $ref: "#/components/schemas/OrderChangeRequestStatus"

    OrderCancellationReasonEnum:
      description: "Причина отмены заказа"
      type: string
      enum:
        - "test"
        - "customer_no_product_needed"
        - "customer_delivery_too_expensive"
        - "customer_impossible_order_change"
        - "customer_no_reason"
        - "assembly_is_late"
        - "assembly_no_reason"
        - "delivery_is_late"
        - "delivery_no_courier"
        - "payment_not_passed"
        - "order_not_picked_up"
        - "delivery_order_mixed"
        - "delivery_courier_fault"
        - "fraud"
        - "other"

    VerifyEACRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string

    VerifyEACResponse:
      type: object
      properties:
        result:
          $ref: "#/components/schemas/VerifyEACResult"

    VerifyEACResult:
      type: object
      properties:
        verificationResult:
          $ref: "#/components/schemas/VerifyEACStatusEnum"
        attemptsLeft:
          type: integer
          description: Попыток осталось

    VerifyEACStatusEnum:
      type: string
      enum:
        - "ACCEPTED"
        - "REJECTED"
        - "NEED_UPDATE"

    EACStrategyEnum:
      type: string
      enum:
        - "taker_to_collect"

    IssueStrategyEnum:
      type: string
      enum:
        - "eac_taker_to_collect"

    OrderCreateResponse:
      description: Успешное создание заказа
      type: object
      required:
        - original_order_id
        - id
      properties:
        original_order_id:
          type: string
          description: Идентификатор заказа на стороне партнера
        id:
          type: string
          description: Идентификатор заказа в системе Магнита
        issue:
          $ref: "#/components/schemas/IssueOrderCreateResponse"

    ErrorResponse:
      type: object
      required:
        - code
        - message
      properties:
        code:
          $ref: "#/components/schemas/ErrorCodeEnum"
        message:
          type: string
          description: Текст ошибки

    StoreCollectQueueUpdatedV1:
      title: Изменение очереди сборки магазинов
      description: Магазины изменили очередь сборки заказов
      type: object
      required:
        - items
      properties:
        items:
          $ref: "#/components/schemas/StoreCollectQueueUpdatedItemV1"

    StoreCollectQueueUpdatedItemV1:
      title: Набор актуальных значений очередей сборки
      type: object
      required:
        - store_code
        - completed_at
      properties:
        store_code:
          example: "123456"
          description: Идентификатор магазина в системе Магнит.
          type: string
        completed_at:
          type: string
          description: "Дата и время окончания сборки в магазине в формате RFC3339 с указанием часового пояса"
          example: "2023-12-31T00:00:00+03:00"
        updated_at:
          type: string
          description: "Дата и время в формате RFC3339 с указанием часового пояса, когда был посчитан completed_at"
          example: "2023-12-31T00:00:00+03:00"

    OauthToken:
      type: object
      required:
        - access_token
        - expires_in
        - scope
        - token_type
      properties:
        access_token:
          type: string
          description: Токен аутентификации
          example: eyJhbGciOiJSUzI1NiIsImtpZCI6IjgyNmRhNjg0LTI5OGItNDRkYy1hYjM1LTkwZDQ4OWQ3MWUxOCIsInR5cCI6IkpXVCJ9.eyJhdWQiOltdLCJjbGllbnRfaWQiOiJkYThiOTUzYi1jNmNjLTRkODgtYTUzZi02MGUzYjBlOTY2MTUiLCJleHAiOjE3MDczOTc5MDIsImV4dCI6eyJmb28iOiJiYXIifSwiaWF0IjoxNzA3Mzk0MzAyLCJpc3MiOiJodHRwOi8vMTI3LjAuMC4xOjQ0NDQiLCJqdGkiOiIwNTdiYWQwMS05YmZjLTQyMTktYTYxMi00NWJjOWY0OWIxNzQiLCJuYmYiOjE3MDczOTQzMDIsInNjcCI6WyJvcGVuaWQiLCJvZmZsaW5lIl0sInN1YiI6ImRhOGI5NTNiLWM2Y2MtNGQ4OC1hNTNmLTYwZTNiMGU5NjYxNSJ9.LN5yR70uw2LlVvaEQC-9oHj0Rr4dtpfO42Ie5OTNmzJCJ40hbB0ncdeje6HrIkKTKbiCrJf-Dnb2j9XMa8ybLQDkqedBG4UN-oJUALeCUS2M6sj2sKAe7B7e_nkF5wz9cuqucR5mbfwa19_xmK517PbMTxX3ZRVuPhKVogNzUFMRSeiFABsXNYVLGB4H5plhP13L4_NkJ6XOzP_wnW207UYIQz2zT97WnhoUPTKQoRWaGw-_CFOtBV6p1oQieXXZIKJ0kJCOD_UVxj2Ume4iKtd4X71GtVnakuB9-JnC7nKZ4UIEYJZ8l70GS-6P1ztElcxE_Xp4xbgxjVQQLro6FiMAiVDwmpWm9aq6Q6uSM971ZZm476N7CUWvEazJ-Ydes-WI0w_scf5GTJIPyqTjYBYH1xrHjt3tjbv5wloUJcRIipeCZreGm8atop0y7YaihKM-AEaVr1-lg45HynDufIoO-hYKUQD48wpg-50gDTItenkMGkKPGkNFkiht80iau93v0g5P5S6AgI3EiW7SUakX5XFRVav5ggjl0BjVDlRZUjReUSbtTer4ShD3Ff_DHMMRzbElnj2vh9sp2UwTeHy_9pCoUiQFBzohAi7whTcydNZtLDAzBw51DWuhuiExZiqqJNoVezqVHMmSjUK4qxXk6YHULhna5KKSROnwJkU
        expires_in:
          type: integer
          format: int64
          description: Время жизни токена в секундах
          example: 3599
        scope:
          type: string
          description: Права доступа
          example: openid last-mile:claims
        token_type:
          type: string
          description: Тип токена
          example: bearer

    OauthError:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: "Код ошибки, кратко описывающий ее причину"
          example: invalid_client
        error_description:
          type: string
          description: "Детальное описание ошибки"
          example: Client authentication failed (e.g., unknown client, no client authentication included, or unsupported authentication method).
        message:
          type: string
          description: "Системное сообщение"

    BadRequestStoresStockDelta:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: "Код ошибки, кратко описывающий ее причину"
          example: invalid_field
        message:
          type: string
          description: "Системное сообщение"

    #last-mile-start
    param.IdempotencyKey:
      type: string

    param.PartnerID:
      type: string

    param.EventID:
      type: string
      format: uuid
      x-go-type: uuid.UUID

    request.CreateClaim:
      $ref: "#/components/schemas/Claim"

    request.CancelClaim:
      type: object
      required:
        - claim_id
      properties:
        claim_id:
          $ref: "#/components/schemas/ClaimID"
        cancel_reason:
          $ref: "#/components/schemas/CancelByPartnerReason"

    request.AcceptClaim:
      type: object
      required:
        - claim_id
      properties:
        claim_id:
          $ref: "#/components/schemas/ClaimID"

    request.ClaimsInfo:
      type: object
      required:
        - claim_ids
      properties:
        claim_ids:
          type: array
          items:
            $ref: "#/components/schemas/ClaimID"

    request.UpdateClaims:
      type: array
      minItems: 1
      maxItems: 100
      x-oapi-codegen-extra-tags:
        validate: required,gt=0,dive,max=100
      items:
        $ref: "#/components/schemas/UpdateClaim"

    request.PushForwardClaim:
      type: object
      required:
        - claim_id
      properties:
        claim_id:
          $ref: "#/components/schemas/ClaimID"

    response.CreateClaim:
      type: object
      required:
        - claim_id
      properties:
        claim_id:
          $ref: "#/components/schemas/ClaimID"

    response.CancelClaim:
      type: object
      required:
        - claim_id
      properties:
        claim_id:
          $ref: "#/components/schemas/ClaimID"

    response.ClaimsInfo:
      type: object
      required:
        - claims
      properties:
        claims:
          type: array
          items:
            $ref: "#/components/schemas/Claim"

    response.ClaimsEvents:
      type: array
      items:
        $ref: "#/components/schemas/ClaimsEvent"

    response.UpdateClaims:
      type: array
      items:
        $ref: "#/components/schemas/UpdateClaimStatus"

    response.Conflict:
      type: object
      properties:
        message:
          type: string

    response.BadRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: "Тип ошибки валидации"
          enum:
            - "INVALID_SCHEMA"
            - "INVALID_FIELD"
            - "OTHER_VALIDATION_ERRORS"
        details:
          type: array
          items:
            type: string
            description: "Описание"
            x-oapi-codegen-extra-tags:
              validate: min=1,dive

    response.PushForwardClaim:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: |
            Статус повторной обработки заявки
            Возможные статусы:
              processing - заявка находится в обработке
              not_found - заявка отсутствует в dead letter
          enum:
            - push_successful
            - not_found
        claim_status:
          $ref: "#/components/schemas/ClaimStatus"

    response.NotFound:
      type: object
      properties:
        message:
          type: string

    ClaimID:
      type: string
      format: uuid
      x-go-type: uuid.UUID
      x-oapi-codegen-extra-tags:
        validate: required,min=1,dive

    ClaimStatus:
      type: string
      description: |
        Статус доставки. Статусы доставки могут добавляться со временем. Нужно учитывать при интеграции.
        Промежуточные статусы:
          created - заказ создан, обработка еще не началась.
          estimating - рассчитывается стоимость доставки и проводится валидация.
          ready_for_approval - ожидается подтверждение заявки заказчиком.
          accepted - валидация завершена.
          performer_searching - выполняется поиск курьера.
            Если курьер был ранее назначен, но отказался от заказа, то заказ снова попадает в этот статус после performer_found.
          performer_found - курьер назначен.
          pickup_arrived - курьер прибыл в точку А для получения заказа.
          pickuped - заказ получен. курьер движется в точку Б.
          delivery_arrived - курьер прибыл в точку Б.
          returning - курьер едет обратно в точку А для возврата товара
          return_arrived - курьер прибыл в точку А для возврата товара

        Терминальные статусы:
          delivery_finished - курьер передал заказ клиенту. Доставка выполнена.
          delivery_failed - курьер не смог доставить заказ.
          cancelled - заказ был отменен со стороны партнера (бесплатная отмена).
          cancelled_with_payment - заказ был отменен со стороны партнера (платная отмена).
          cancelled_by_service - заказ был отменен со стороны сервиса доставки. Причина отмены в поле cancel_reason.
          return_finished - курьер вернул заказ в точку А
          return_failed - возврат заказа не удался.
      enum:
        - created
        - estimating
        - ready_for_approval
        - accepted
        - performer_searching
        - performer_found
        - pickup_arrived
        - pickuped
        - delivery_arrived
        - returning
        - return_arrived
        - delivery_finished
        - delivery_failed
        - cancelled
        - cancelled_with_payment
        - cancelled_by_service
        - return_finished
        - return_failed

    ClaimState:
      type: object
      required:
        - status
      properties:
        status:
          $ref: "#/components/schemas/ClaimStatus"
        cancel_reason:
          $ref: "#/components/schemas/CancelReason"

    CourierInfo:
      type: object
      description: |
        Информация о курьере, который выполняет заказ. Заполняется только, если курьер уже был назначен.
        Если курьер не был назначен или был снят с заказа - поле пустое.
      required:
        - name
        - phone
      properties:
        name:
          description: Имя курьера
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
        phone:
          description: Телефон для связи
          type: string
          x-oapi-codegen-extra-tags:
            validate: required

    Claim:
      type: object
      required:
        - external_order_id
        - items
        - route_points
      properties:
        external_order_id:
          description: |
            Номер заказа в системе партнера, по которому курьер сможет получить его в магазине.
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
        items:
          $ref: "#/components/schemas/Items"
        due_time:
          $ref: "#/components/schemas/DateTime"
        route_points:
          description: "Точки получения заказа и назначения."
          type: array
          items:
            $ref: "#/components/schemas/RoutePoint"
          x-oapi-codegen-extra-tags:
            validate: required,len=2,dive
        state:
          $ref: "#/components/schemas/ClaimState"
        courier_info:
          $ref: "#/components/schemas/CourierInfo"
        estimation:
          $ref: "#/components/schemas/Estimation"
        need_return:
          description: "Нужна ли обратная доставка в случае, если заказ доставить не удалось"
          type: boolean
        comment:
          description: Комментарий к заказу
          type: string
        meta:
          oneOf:
            - $ref: "#/components/schemas/Meta"

    Items:
      description: "Информация по грузам."
      type: object
      required:
        - weight
      properties:
        weight:
          description: "Общий вес в граммах."
          type: integer
          minimum: 0
          maximum: 100000
          x-oapi-codegen-extra-tags:
            validate: required,lte=100000,gte=0
          example: 1000
        cost:
          description: "Стоимость в копейках."
          type: integer
          example: 250000
          minimum: 0
          maximum: 2147483647
          x-oapi-codegen-extra-tags:
            validate: gte=0,lt=2147483647

    Contact:
      type: object
      required:
        - phone
      properties:
        name:
          description: "Имя или наименование организации"
          type: string
          example: "Иван Иванов"
        phone:
          description: "Контактный телефон"
          type: string
          x-oapi-codegen-extra-tags:
            validate: required,e164
          example: "+78005553535"
        extra_phone:
          description: "Дополнительный телефон"
          type: string
          example: "+78005553535"

    Estimation:
      description: |
        Результат оценки расстояния и стоимости доставки, а также ожидаемое времени доставки.
        Заполняется только после расчета стоимости.
      type: object
      required:
        - distance
      properties:
        distance:
          description: "Расстояние в метрах"
          type: integer
          example: 10000
        cost:
          description: "Стоимость доставки в копейках"
          type: integer
          example: 250000
        estimated_arrival:
          type: string
          description: "Ожидаемое время доставки в формате (RFC3339 формат : %Y-%M-%DT%h:%m:%sZ)"
          example: "2023-03-20T15:04:05Z"
          format: date-time
        expected_courier_arrival:
          type: string
          description: "Ожидаемое время прибытия курьера за заказом (RFC3339 формат : %Y-%M-%DT%h:%m:%sZ)"
          example: "2023-03-20T15:04:05Z"
          format: date-time

    RoutePointType:
      type: string
      description: |
        Тип точки:
        source - точка получения заказа
        destination - точка, куда нужно доставить заказ
      enum:
        - source
        - destination
      x-oapi-codegen-extra-tags:
        validate: required,oneof=source destination

    RoutePoint:
      type: object
      required:
        - point_type
        - address
        - contact
      properties:
        point_type:
          $ref: "#/components/schemas/RoutePointType"
        address:
          $ref: "#/components/schemas/Address"
        contact:
          $ref: "#/components/schemas/Contact"
        transfer_code:
          $ref: "#/components/schemas/TransferCode"

    Address:
      type: object
      required:
        - full_name
        - coordinates
      properties:
        full_name:
          description: "Полное название с указанием города"
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
          example: "Москва, Садовническая улица, 82с2"
        coordinates:
          $ref: "#/components/schemas/Coordinates"
        floor:
          description: "Этаж"
          type: string
          example: "6"
        flat:
          description: "Квартира"
          type: string
          example: "40"
        porch:
          description: "Подъезд"
          type: string
          example: "2"
        door_code:
          description: "Код домофона"
          type: string
          example: "54В8228"
        comment:
          description: "Комментарий к адресу"
          type: string
          x-oapi-codegen-extra-tags:
            validate: omitempty,max=1000
          maxLength: 1000
          example: "Как пройти, куда постучать"

    Coordinates:
      description: "Координаты точки"
      type: object
      required:
        - lat
        - lon
      properties:
        lat:
          type: number
          minimum: -90
          maximum: 90
          x-oapi-codegen-extra-tags:
            validate: required,lte=90,gte=-90
          x-go-type: float64
          example: 55.735616
        lon:
          type: number
          minimum: -180
          maximum: 180
          x-oapi-codegen-extra-tags:
            validate: required,lte=180,gte=-180
          x-go-type: float64
          example: 37.642384

    Meta:
      description: Дополнительная информация по заказу. Например, можно передать название торговой сети.
      type: object

    DateTime:
      type: string
      description: "Дата/время в формате (RFC3339 формат : %Y-%M-%DT%h:%m:%sZ)"
      example: "2023-03-20T15:04:05Z"
      format: date-time

    ClaimsEvent:
      required:
        - claim_id
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
        claim_id:
          $ref: "#/components/schemas/ClaimID"
        event_time:
          $ref: "#/components/schemas/DateTime"
        event:
          oneOf:
            - $ref: "#/components/schemas/ClaimsEventStatusChanged"

    ClaimsEventStatusChanged:
      description: Событие по заявке на доставку
      required:
        - new_status
      type: object
      properties:
        new_status:
          $ref: "#/components/schemas/ClaimStatus"
        payload:
          oneOf:
            - $ref: "#/components/schemas/CourierInfo"
            - $ref: "#/components/schemas/CancelReason"

    CancelReason:
      type: object
      description: |
        Причина отмены заявки
      required:
        - code
      properties:
        code:
          type: string
          oneOf:
            - $ref: "#/components/schemas/CancelByPartnerReasonCode"
            - $ref: "#/components/schemas/CancelByServiceReasonCode"
        message:
          type: string
          description: Описание причины отмены.

    CancelByServiceReasonCode:
      type: string
      description: |
        Код причины отмены сервисом:
        performer_not_found - не удалось найти курьера за отведенное время.
        out_of_delivery_zone - заказ за пределами зоны доставки.
        out_of_working_time - заказ создан в нерабочее время.
        too_high_delivery_distance - слишком большое расстояние между точкой пикапа и дроп офф.
        too_heavy_cargo - слишком тяжелый заказ.
        other - другая причина со свободным описанием.
      enum:
        - performer_not_found
        - out_of_delivery_zone
        - out_of_working_time
        - too_high_delivery_distance
        - too_heavy_cargo
        - other
      x-oapi-codegen-extra-tags:
        validate: required,oneof=performer_not_found out_of_delivery_zone out_of_working_time too_high_delivery_distance too_heavy_cargo other

    CancelByPartnerReason:
      type: object
      description: |
        Причина отмены заявки партнером
      required:
        - code
      properties:
        code:
          $ref: "#/components/schemas/CancelByPartnerReasonCode"
        message:
          type: string
          description: Описание причины отмены.

    CancelByPartnerReasonCode:
      type: string
      description: |
        Код причины отмены партнером:
        long_wait_courier - долгое ожидание курьера
        cancelled_by_customer - клиент передумал
        courier_without_inventory - курьер без сумки
        customer_not_respond - клиента нет дома
        long_wait_order - долгое ожидание заказа
        pickup_point_closed - точка выдачи заказа закрыта
      enum:
        - long_wait_courier
        - cancelled_by_customer
        - courier_without_inventory
        - customer_not_respond
        - long_wait_order
        - pickup_point_closed
      x-oapi-codegen-extra-tags:
        validate: required,oneof=long_wait_courier cancelled_by_customer courier_without_inventory customer_not_respond long_wait_order pickup_point_closed

    TransferCode:
      type: string
      description: |
        Для точки с типом source - код для получения заказа в магазине (курьер называет код сборщику)
        Для точки с типом destination - код для передачи заказ клиенту (пока не поддерживается)
      example: "132443"

    UpdateClaim:
      type: object
      required:
        - claim_id
        - route_points
      properties:
        claim_id:
          $ref: "#/components/schemas/ClaimID"
        route_points:
          type: array
          description: "Точки получения заказа и назначения."
          items:
            type: object
            required:
              - point_type
              - transfer_code
            properties:
              point_type:
                $ref: "#/components/schemas/RoutePointType"
              transfer_code:
                $ref: "#/components/schemas/TransferCode"
              address:
                type: object
                required:
                  - comment
                properties:
                  comment:
                    type: string
                    x-oapi-codegen-extra-tags:
                      validate: required
                    example: "Как пройти, куда постучать"
          x-oapi-codegen-extra-tags:
            validate: required,gt=0,dive

    PartnerConfig:
      type: object
      description: |
        Партнерский конфиг
      required:
        - sla
        - max_order_accept_time
        - max_order_weight
        - max_delivery_distance
      properties:
        expected_courier_arrival:
          $ref: "#/components/schemas/PartnerConfig.ExpectedCourierArrival"
        max_performer_search_time:
          $ref: "#/components/schemas/PartnerConfig.MaxPerformerSearchTime"
        sla:
          $ref: "#/components/schemas/PartnerConfig.Sla"
        max_order_accept_time:
          $ref: "#/components/schemas/PartnerConfig.MaxOrderAcceptTime"
        max_order_weight:
          $ref: "#/components/schemas/PartnerConfig.MaxOrderWeight"
        max_delivery_distance:
          $ref: "#/components/schemas/PartnerConfig.MaxDeliveryDistance"
        delivery_provider:
          $ref: "#/components/schemas/PartnerConfig.DeliveryProvider"
        deferred_pickup_point_arrival_intervals:
          type: array
          items:
            $ref: "#/components/schemas/PartnerConfig.PickupPointArrivalInterval"
      x-oapi-codegen-extra-tags:
        validate: dive

    PartnerConfig.PickupPointArrivalInterval:
      type: object
      description: |
      required:
        - lower_border
        - upper_border
      properties:
        lower_border:
          type: string
          description: |
            нижняя граница интервала отложенной отправки события PickupPointArrivalInterval
        upper_border:
          type: string
          description: |
            верхняя граница интервала отложенной отправки события PickupPointArrivalInterval

    PartnerConfig.ExpectedCourierArrival:
      type: string
      description: "SLA подлета в точку А"

    PartnerConfig.MaxPerformerSearchTime:
      type: string
      description: "Максимальное время поиска курьера"

    PartnerConfig.Sla:
      type: string
      description: "Полный SLA"
      x-oapi-codegen-extra-tags:
        validate: required

    PartnerConfig.MaxOrderAcceptTime:
      type: string
      pattern: "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"
      description: "Время, до которого можно сделать заказ"
      x-oapi-codegen-extra-tags:
        validate: required

    PartnerConfig.MaxOrderWeight:
      type: integer
      description: "Макисмальный вес заказа"
      x-oapi-codegen-extra-tags:
        validate: required,gte=0

    PartnerConfig.MaxDeliveryDistance:
      type: integer
      description: "Максимальное расстония для доставки"
      x-oapi-codegen-extra-tags:
        validate: required,gte=0

    PartnerConfig.DeliveryProvider:
      type: string
      description: "Сервис, который используется работы с доставками"
      enum:
        - "delivery_service"
        - "proxy_dispatch"
      x-oapi-codegen-extra-tags:
        validate: oneof=delivery_service proxy_dispatch

    UpdateClaimStatus:
      type: object
      required:
        - claim_id
        - status
      properties:
        claim_id:
          $ref: "#/components/schemas/ClaimID"
        status:
          description: |
            Статус обновления по конкретной заявке:
              success - успешное обновление заявки
              error - ошибка при обновлении
          type: string
          enum:
            - success
            - error
          x-oapi-codegen-extra-tags:
            validate: required

    Partner:
      type: object
      required:
        - partner_id
        - name
      properties:
        partner_id:
          description: "Идентификатор партнера"
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid/v5
        name:
          description: "Наименование партнера"
          type: string
        email:
          type: string
          description: "Email партнера"
        parent:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid/v5
        display_name:
          type: string
          description: "Название партнера для использования в качестве названия магазина в РМ Логиста"
        config:
          $ref: "#/components/schemas/Config"

    Config:
      type: object

    SettingsType:
      type: string
      default: lm
      enum:
        - ds
        - lm
      x-oapi-codegen-extra-tags:
        validate: omitempty,oneof=lm ds

    LogzoneConfigQueryFilter:
      type: object
      additionalProperties: false
      oneOf:
        - required: [ name ]
        - required: [ external_id ]
        - required: [ point ]
      properties:
        name:
          type: string
        external_id:
          type: string
        point:
          $ref: "#/components/schemas/Point"

    Point:
      type: object
      required:
        - lat
        - lon
      properties:
        lat:
          type: number
          x-go-type: float64
        lon:
          type: number
          x-go-type: float64

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          $ref: "#/components/schemas/ErrorCodes"
        message:
          type: string

    ErrorCodes:
      description: Коды ошибок
      type: string
      enum:
        - NOT_FOUND
        - BAD_REQUEST
        - VALIDATION_ERROR
        - INTERNAL_SERVER_ERROR
        - UNPROCESSABLE_ENTITY
        - CONFLICT

    #last-mile-end

    # magnit-post-start
    PickupPointsResponse:
      type: object
      required:
        - pickupPoints
        - pager
      properties:
        pickupPoints:
          type: array
          items:
            $ref: "#/components/schemas/PickupPoint"
        pager:
          $ref: "#/components/schemas/Pager"
    DeliveryOrderRequest:
      type: object
      description: Данные для создания заказа на доставку
      required:
        - customerOrderId
        - payment
        - delivery
        - characteristic
      properties:
        customerOrderId:
          description: Идентификатор заказа в системе отправителя
          type: string
          example: DO-2343423432
        payment:
          $ref: "#/components/schemas/MagnitPostPayment"
        delivery:
          $ref: "#/components/schemas/MagnitPostDelivery"
        characteristic:
          $ref: "#/components/schemas/ParcelCharacteristic"
    DeliveryOrderResponse:
      type: object
      description: Информация о заказе на доставку в системе "Магнит Маркет"
      properties:
        trackingNumber:
          description: Трек-номер заказа. Используется для получения информации по заказу.
          type: string
          example: 021458724
        customerOrderId:
          description: Идентификатор заказа в системе отправителя
          type: string
          example: DO-2343423432
        pickupCode:
          description: Код для получения заказа
          type: string
          example: 1234
        status:
          $ref: "#/components/schemas/DeliveryOrderStatus"
        payment:
          $ref: "#/components/schemas/MagnitPostPayment"
        delivery:
          $ref: "#/components/schemas/MagnitPostDelivery"
        characteristic:
          $ref: "#/components/schemas/ParcelCharacteristic"
    DeliveryOrderStatusesRequest:
      type: object
      description: Список trackingNumber
      properties:
        trackingNumbers:
          type: array
          items:
            type: string
            description: trackingNumber
            example: 021458724
          minItems: 1
          maxItems: 1000
    DeliveryOrderStatusesResponse:
      type: array
      items:
        $ref: "#/components/schemas/DeliveryOrderStatusInfo"
    DeliveryOrderHistoryResponse:
      type: object
      description: История изменения статусов заказа на доставку
      properties:
        trackingNumber:
          description: Трек-номер заказа. Используется для получения информации по заказу.
          type: string
          example: 021458724
        statuses:
          type: array
          items:
            type: object
            properties:
              status:
                $ref: "#/components/schemas/DeliveryOrderStatus"
              timestamp:
                type: number
                format: int64
                description: Время изменения статуса
                example: 1718256471

    DeliveryOrderStatusInfo:
      type: object
      description: Информация по статусам заказов на доставку
      properties:
        trackingNumber:
          type: string
          description: Трек-номер заказа на доставку
          example: 021458724
        status:
          $ref: "#/components/schemas/DeliveryOrderStatus"
    PickupPoint:
      type: object
      properties:
        key:
          description: Ключ пункта выдачи заказа
          type: string
          example: 63933
        name:
          description: Наименование ПВЗ
          type: string
          example: Двуреченка
        type:
          description: Тип пункта выдачи заказов
          type: string
          example: MAGNIT_COSMETICS
        address:
          description: Адрес пункта выдачи заказов
          type: string
          example: г. Казань, ул. Альфии Авзаловой, д. 7 (Магнит Косметик)
        region:
          description: Регион, в котором находится ПВЗ
          type: string
          example: "Республика Татарстан"
        city:
          description: Город, в котором находится ПВЗ
          type: string
          example: "Казань"
        index:
          description: Почтовый индекс пункта выдачи заказов
          type: string
          example: 420076
        phones:
          description: Телефон
          type: array
          items:
            type: string
            example: +7 (800) 700-96-16
        workHours:
          description: Расписание работы ПВЗ
          $ref: "#/components/schemas/WorkHours"
        coordinates:
          description: Координаты
          $ref: "#/components/schemas/PickupPointCoordinates"

    PickupPointCoordinates:
      type: object
      properties:
        latitude:
          description: Широта
          type: number
          format: double
          minimum: -90
          maximum: 90
          example: 55.858563
        longitude:
          description: Долгота
          type: number
          format: double
          minimum: -180
          maximum: 180
          example: 48.904931
    WorkHours:
      type: array
      items:
        $ref: "#/components/schemas/DayWorkHours"
      minItems: 1
      maxItems: 7
    DayWorkHours:
      type: object
      description: Часы работы
      properties:
        day:
          $ref: "#/components/schemas/Week"
        from:
          description: Открытие
          type: string
          example: "08:00"
        till:
          description: Закрытие
          type: string
          example: "20:00"
    Week:
      type: string
      description: День недели
      enum: [MON, TUE, WED, THU, FRI, SAT, SUN]
    DeliveryOrderStatus:
      type: string
      description: Статус заказа на доставку
      enum:
        [
          NEW,
          CREATED,
          DELIVERING_STARTED,
          ACCEPTED_AT_POINT,
          IN_COURIER_DELIVERY,
          ISSUED,
          DESTROYED,
          ACCEPTED_AT_WAREHOUSE,
          REMOVED,
          WAITING_RETURN,
          RETURN_INITIATED,
          RETURN_SEND_TO_WAREHOUSE,
          POSSIBLY_DEFECTED,
          DEFECTED,
          RETURN_ACCEPTED_AT_WAREHOUSE,
          RETURNED_TO_PROVIDER,
        ]
      example: CREATED
    MagnitPostPayment:
      type: object
      description: Информация об оплате товара
      required:
        - declaredValue
      properties:
        declaredValue:
          description: Заявленная стоимость
          type: number
          format: double
          minimum: 0
          example: 153.28
    MagnitPostDelivery:
      type: object
      description: Информация о деталях доставки
      required:
        - pickupPointKey
        - recipient
      properties:
        pickupPointKey:
          type: string
          example: 63933
        recipient:
          $ref: "#/components/schemas/Recipient"
    Recipient:
      type: object
      description: Информация о получателе заказа
      required:
        - firstName
        - familyName
        - phoneNumber
      properties:
        firstName:
          type: string
          description: Имя получателя
          example: Иван
        familyName:
          type: string
          description: Фамилия получателя
          example: Иванов
        phoneNumber:
          description: Телефон получателя
          type: string
          example: +7..........
        address:
          type: string
          description: Адрес получателя
          example: г. Казань, ул. Альфии Авзаловой, д. 7
    ParcelCharacteristic:
      description: Весогабаритные характеристики посылки
      type: object
      required:
        - weight
        - length
        - width
        - height
      properties:
        weight:
          description: Вес посылки в граммах
          type: integer
          format: int32
          example: 500
        length:
          description: Длина посылки в миллиметрах
          type: integer
          format: int32
          example: 200
        width:
          description: Ширина посылки в миллиметрах
          type: integer
          format: int32
          example: 150
        height:
          description: Высота посылки в миллиметрах
          type: integer
          format: int32
          example: 50
    ErrorMessage:
      description: Сообщение об ошибке
      type: object
      properties:
        message:
          description: Текст сообщения об ошибке
    Pager:
      type: object
      required:
        - total
        - currentPage
        - pageSize
        - pageCount
      properties:
        totalItems:
          description: Всего записей в коллекции
          type: integer
          format: int32
          minimum: 0
          example: 30
        totalPages:
          description: Количество страниц
          type: integer
          format: int32
          minimum: 1
          example: 2
        currentPage:
          description: Номер страницы
          type: integer
          format: int32
          minimum: 1
          example: 1
        pageSize:
          description: Количество элементов на одной странице
          type: integer
          format: int32
          example: 100
    EstimateOrderRequestBody:
      type: object
      required:
        - pup_region
        - pup_city
        - city_from
      properties:
        pup_region:
          type: string
          description: "Регион ПВЗ"
        pup_city:
          type: string
          description: "Город ПВЗ"
        pup_key:
          type: string
          description: "Идентификатор ПВЗ"
        pup_name:
          type: string
          description: "Название ПВЗ"
        city_from:
          type: string
          description: |
            Город отправки. Доступные значения:
              - Казань
              - Москва
              - Воронеж
              - Екатеринбург
              - Ижевск
              - Магнитогорск
              - Оренбург
              - Саратов
              - Регионы

            Для городов МО используется значение "Москва", для всех остальных не из списка - "Регионы"

    EstimateOrderResponseBody:
      type: object
      required:
        - from
        - to
        - cost
      properties:
        from:
          type: integer
          minimum: 0
          description: "Минимальный срок доставки в днях"
          x-go-type: int
        to:
          type: integer
          minimum: 0
          description: "Максимальный срок доставки в днях"
          x-go-type: int
        cost:
          type: integer
          x-go-type: int
          description: "Стоимость доставки в копейках"
          example: 25000
    #magnit-post-end
    #magnit-market-seller-api-schema-begin
    #magnit-market-seller-api-schema-goods
    ApiErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: Error code
        detailMessage:
          type: string
          deprecated: true
        message:
          type: string
          description: Error message
        payload:
          type: object
      required:
      - code
      - message
    CategoryCharacteristicsRequest:
      type: object
      properties:
        category_ids:
          type: array
          description: "Список идентификаторов категорий, для которых необходимо п\
            олучить характеристики. Обрабатываются только идентификаторы активных\
            \ категорий - характеристики будут возвращены только для них."
          example:
          - 123123
          - 123124
          items:
            type: integer
            format: int64
            description: "Список идентификаторов категорий, для которых необходимо\
              \ получить характеристики. Обрабатываются только идентификаторы акти\
              вных категорий - характеристики будут возвращены только для них."
      required:
      - category_ids
    CharacteristicAttribute:
      type: object
      description: "Список характеристик, связанных со словарем"
      properties:
        id:
          type: integer
          format: int64
          description: Уникальный идентификатор характеристики
          example: 101
        title:
          type: string
          description: Название или заголовок характеристики
          example: Цвет
        value:
          type: string
          description: Значение характеристики
          example: Красный
      required:
      - id
      - title
      - value
    CreateSkuFilter:
      type: object
      description: Фильтры SKU
      properties:
        characteristic_id:
          type: integer
          format: int64
          description: Идентификатор справочника
        characteristic_values:
          type: array
          description: Массив значений фильтра
          items:
            $ref: "#/components/schemas/SkuFilterValue"
      required:
      - characteristic_id
      - characteristic_values
    CreateSkuRequest:
      type: object
      properties:
        sku_list:
          type: array
          description: Массив со списком SKU
          items:
            $ref: "#/components/schemas/SkuRequest"
      required:
      - sku_list
    CreateSkuResponse:
      type: object
      properties:
        task_id:
          type: integer
          format: int64
          description: Идентификатор задачи создания СКУ. Используется для отслеживания
            статуса запроса.
          example: 1234
    CustomSkuCharacteristic:
      type: object
      description: Пользовательские характеристики sku для объединения SKU в одну
        карточку товара
      properties:
        characteristic_title:
          type: string
          description: Название характеристики
        characteristic_value:
          type: string
          description: Значение характеристики
      required:
      - characteristic_title
      - characteristic_value
    DictionaryPagination:
      type: object
      description: Детали пагинации для ответа словаря
      properties:
        page:
          type: integer
          format: int32
          description: Номер текущей страницы
          example: 0
          minimum: 0
        page_size:
          type: integer
          format: int32
          description: Количество элементов на странице
          example: 10
          maximum: 50
      required:
      - page
      - page_size
    DictionaryResponse:
      type: object
      properties:
        characteristic_attributes:
          type: array
          description: "Список характеристик, связанных со словарем"
          items:
            $ref: "#/components/schemas/CharacteristicAttribute"
        characteristic_title:
          type: string
          description: "Название характеристики, связанной со словарем"
          example: Размер
        dictionary_id:
          type: integer
          format: int64
          description: Уникальный идентификатор словаря
          example: 1
        pagination:
          $ref: "#/components/schemas/DictionaryPagination"
        system_characteristic:
          type: boolean
          description: "Флаг, указывающий, является ли характеристика системной"
          example: true
      required:
      - characteristic_attributes
      - characteristic_title
      - dictionary_id
      - pagination
      - system_characteristic
    ErrorInfo:
      type: object
      description: Список ошибок при обработке товаров
      properties:
        attribute_error:
          type: string
          description: "Поле, в котором произошла ошибка"
        message:
          type: string
          description: Текст ошибки
        seller_sku_id:
          type: string
          description: Идентификатор СКУ в системе продавца
        status:
          type: string
          description: Статус обработки СКУ
    ExternalSellerCategoryDto:
      type: object
      properties:
        category_id:
          type: integer
          format: int64
          description: Уникальный идентификатор категории
          example: 123
        category_string_path:
          type: string
          description: "Полный путь категории, отображающий иерархию от родительск\
            ой до текущей категории, разделённый '->'"
          example: Электроника -> Компьютеры -> Ноутбуки
        category_title:
          type: string
          description: Название категории
          example: Ноутбуки
      required:
      - category_id
      - category_string_path
      - category_title
    ExternalSellerCharacteristicsDto:
      type: object
      properties:
        category_id:
          type: integer
          format: int64
          description: Уникальный идентификатор категории
          example: 123
        category_title:
          type: string
          description: Название категории
          example: Ноутбуки
        defined_characteristic:
          type: array
          description: Определённые характеристики категории
          items:
            $ref: "#/components/schemas/SkuCharacteristicCategoryDto"
        product_filter:
          type: array
          description: "Характеристики категории, используемые как фильтры для тов\
            аров"
          items:
            $ref: "#/components/schemas/SkuCharacteristicCategoryDto"
        sku_filter:
          type: array
          description: "Характеристики категории, используемые как фильтры для SKU"
          items:
            $ref: "#/components/schemas/SkuCharacteristicCategoryDto"
      required:
      - category_id
      - category_title
      - defined_characteristic
      - product_filter
    GenericResponse:
      type: object
      properties:
        error:
          type: string
          example: "null"
          readOnly: true
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ApiErrorResponse"
        payload:
          type: object
          description: Response payload
        timestamp:
          type: string
          format: date-time
        trace:
          type: string
    KeySetPagination:
      type: object
      description: KeySet пагинация
      properties:
        dir:
          type: string
          description: Направление сортировки
          enum:
          - ASC
          - DESC
          example: DESC
        last_key:
          type: integer
          format: int64
          description: "Идентификатор записи, с которого начинать чтение. Для полу\
            чения следующей страницы используйте последний sku_id из предыдущего о\
            твета"
          example: 0
          minimum: 0
        limit:
          type: integer
          format: int64
          description: Максимальное количество возвращаемых данных
          example: 25
          maximum: 1000
          minimum: 1
      required:
      - dir
      - last_key
      - limit
    Pagination:
      type: object
      description: Пагинация
      properties:
        dir:
          type: string
          description: Направление сортировки
          enum:
          - ASC
          - DESC
          example: DESC
        page:
          type: integer
          format: int64
          description: Страница
          example: 0
          minimum: 0
        page_size:
          type: integer
          format: int64
          description: Количество записей на странице
          example: 25
          maximum: 1000
          minimum: 1
      required:
      - dir
      - page
      - page_size
    PriceDto:
      type: object
      description: Данные по ценам
      properties:
        currency_code:
          type: string
          description: Код валюты
          example: RUB
        old_price:
          type: number
          description: Цена товара без скидки
        price:
          type: number
          description: Цена продажи
        seller_sku_id:
          type: string
          description: Идентификатор sku в системе продавца
          example: bdd8c471a3b0a3c1
        sku_id:
          type: integer
          format: int64
          description: Идентификатор sku (формирует ММ)
          example: 121
      required:
      - currency_code
      - price
    PriceInfoResponse:
      type: object
      description: Данные по ценам
      properties:
        commission_amount:
          type: number
          description: Размер комиссии за товар
        commission_currency_code:
          type: string
          description: Код валюты комиссии
        commission_percent:
          type: integer
          format: int64
          description: Процент комиссии
        currency_code:
          type: string
          description: Код валюты
        old_price:
          type: number
          description: Цена товара без скидки
        price:
          type: number
          description: Цена продажиа
        seller_sku_id:
          type: string
          description: Идентификатор sku в системе продавца
          example: bdd8c471a3b0a3c1
        sku_id:
          type: integer
          format: int64
          description: Идентификатор sku (формирует ММ)
          example: 121
        timestamp:
          type: string
          format: date-time
          description: Дата последнего обновления
    PriceUpdateResponse:
      type: object
      description: Данные по ценам с ошибками
      properties:
        currency_code:
          type: string
          description: Код валюты
          example: RUB
        error:
          type: string
          description: Описание ошибки
        old_price:
          type: number
          description: Цена товара без скидки
        price:
          type: number
          description: Цена продажи
        seller_sku_id:
          type: string
          description: Идентификатор sku в системе продавца
          example: bdd8c471a3b0a3c1
        sku_id:
          type: integer
          format: int64
          description: Идентификатор sku (формирует ММ)
          example: 121
      required:
      - currency_code
      - price
    PricesRequest:
      type: object
      description: Запрос на обновление данные по ценам
      properties:
        prices:
          type: array
          description: Массив цен
          items:
            $ref: "#/components/schemas/PriceDto"
      required:
      - prices
    ProductDeleteRequest:
      type: object
      description: Запрос на удаление продуктов
      properties:
        product_ids:
          type: array
          description: Список идентификаторов продукта
          items:
            type: integer
            format: int64
            description: Список идентификаторов продукта
      required:
      - product_ids
    ProductDeleteResponse:
      type: object
      properties:
        error_msg:
          type: string
          description: "Текст ошибки, полученной при попытке удаления продукта"
        product_id:
          type: integer
          format: int64
          description: Идентификатор продукта
        success:
          type: boolean
          description: Флаг успешности удаления продукта
    ProductVisualEffects:
      type: object
      description: Объект с URL архива.zip с фотографиями внутри в формате .jpg
      properties:
        url:
          type: string
          description: Конечный URL
      required:
      - url
    ShopDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Идентификатор магазина
          example: 123
        title:
          type: string
          description: Название магазина
          example: Березка
    ShortSkuInfo:
      type: object
      description: Данные по sku после маппинга
      properties:
        barcode:
          type: integer
          format: int64
          description: Штрихкод SKU
        product_id:
          type: integer
          format: int64
          description: Идентификатор продукта
        seller_sku_id:
          type: string
          description: Внешний идентификатор SKU
        sku_id:
          type: integer
          format: int64
          description: Внутренний идентификатор SKU
    ShortSkuInfoFilter:
      type: object
      description: Фильтры для поиска по sku ID или external sku ID
      properties:
        seller_sku_ids:
          type: array
          description: Список идентификаторов СКУ в системе селлера
          items:
            type: string
            description: Список идентификаторов СКУ в системе селлера
          maxItems: 1000
          minItems: 0
        sku_ids:
          type: array
          description: Список внутренних идентификаторов СКУ
          items:
            type: integer
            format: int64
            description: Список внутренних идентификаторов СКУ
          maxItems: 1000
          minItems: 0
    ShortSkuInfoRequest:
      type: object
      description: Запрос для получения компактной информации об СКУ
      properties:
        filters:
          $ref: "#/components/schemas/ShortSkuInfoFilter"
        pagination:
          $ref: "#/components/schemas/KeySetPagination"
    ShortSkuInfoResponse:
      type: object
      description: "Ответ, содержащий компактную информацию по найденным СКУ"
      properties:
        result:
          type: array
          description: Массив найденных СКУ
          items:
            $ref: "#/components/schemas/ShortSkuInfo"
        result_count:
          type: integer
          format: int32
          description: Количество найденных СКУ
        shop_id:
          type: integer
          format: int64
          description: Идентификатор магазина
    SkuArchiveRequest:
      type: object
      properties:
        seller_sku_ids:
          type: array
          description: Список идентификаторов СКУ в системе селлера
          items:
            type: string
            description: Список идентификаторов СКУ в системе селлера
        sku_ids:
          type: array
          description: Список внутренних идентификаторов СКУ
          items:
            type: integer
            format: int64
            description: Список внутренних идентификаторов СКУ
    SkuArchiveResponse:
      type: object
      properties:
        error_msg:
          type: string
        seller_sku_id:
          type: string
          description: Идентификатор sku в системе продавца
          example: bdd8c471a3b0a3c1
        sku_id:
          type: integer
          format: int64
          description: Идентификатор sku (формирует ММ)
          example: 121
        success:
          type: boolean
    SkuCharacteristic:
      type: object
      description: "Характеристики, относящиеся к Продукту"
      properties:
        characteristic_id:
          type: integer
          format: int64
          description: Идентификатор справочника
        characteristic_value:
          type: string
          description: Значение характеристики
      required:
      - characteristic_id
      - characteristic_value
    SkuCharacteristicCategoryDto:
      type: object
      description: "Характеристики категории, используемые как фильтры для SKU"
      properties:
        characteristic_title:
          type: string
          description: Название характеристики
          example: Цвет
        dictionary_id:
          type: integer
          format: int64
          description: Уникальный идентификатор характеристики
          example: 101
        extendable_values:
          type: boolean
          description: "Признак того, что значения фильтра SKU могут быть расширен\
            ы"
          example: true
        input_type:
          type: string
          description: Тип ввода значения фильтра для SKU
          enum:
          - RANGED_VALUE
          - SINGLE_CHOICE
          - MULTIPLE_CHOICE
          example: SINGLE_CHOICE
        max_allowed_values:
          type: integer
          format: int32
          description: Максимально допустимое количество значений для фильтра SKU
          example: 5
        required:
          type: boolean
          description: Признак обязательности заполнения характеристики
          example: true
        system_characteristic:
          type: boolean
          description: "Признак того, что характеристика является системной (true)\
            \ или фильтрующей (false)"
          example: true
        type:
          type: string
          description: Тип характеристики
          enum:
          - DEFINED
          - PRODUCT
          - SKU
          example: DEFINED
      required:
      - characteristic_title
      - dictionary_id
      - required
      - system_characteristic
      - type
    SkuDimensions:
      type: object
      description: ВГХ SKU
      properties:
        height:
          type: integer
          format: int32
          description: Высота в мм
        length:
          type: integer
          format: int32
          description: Длина в мм
        weight:
          type: integer
          format: int32
          description: Вес в граммах
        width:
          type: integer
          format: int32
          description: Ширина в мм
      required:
      - height
      - length
      - weight
      - width
    SkuFilter:
      type: object
      description: Фильтр SKU
      properties:
        seller_sku_ids:
          type: array
          description: Список идентификаторов СКУ в системе селлера
          items:
            type: string
            description: Список идентификаторов СКУ в системе селлера
        sku_ids:
          type: array
          description: Список внутренних идентификаторов СКУ
          items:
            type: integer
            format: int64
            description: Список внутренних идентификаторов СКУ
    SkuFilterValue:
      type: object
      description: Массив значений фильтра
      properties:
        characteristic_value:
          type: string
          description: Значение фильтра
      required:
      - characteristic_value
    SkuInfo:
      type: object
      description: Информация о SKU
      properties:
        barcode:
          type: integer
          format: int64
          description: Штрихкод
        category_id:
          type: integer
          format: int64
          description: Идентификатор категории
        certificate:
          type: string
          description: Сертификат
        composition:
          type: string
          description: Состав
        currency_code:
          type: string
          description: Валюта цены
        custom_characteristic_values_skus:
          type: array
          description: Пользовательские характеристики SKU
          items:
            $ref: "#/components/schemas/CustomSkuCharacteristic"
        depth:
          type: integer
          format: int64
          deprecated: true
          description: "Глубина в мм (deprecated, используйте поле length)"
        description:
          type: string
          description: Описание
        height:
          type: integer
          format: int64
          description: Высота в мм
        instruction:
          type: string
          description: Инструкция
        is_active:
          type: boolean
          description: Признак активности
        is_archive:
          type: boolean
          description: Признак архивности
        is_blocked:
          type: boolean
          description: Признак блокировки
        is_no_stock:
          type: boolean
          description: Признак отсутствия на складе
        length:
          type: integer
          format: int64
          description: Длина в мм (приоритетное поле)
        okpd2:
          type: string
          description: Код ОКПД2
        old_price:
          type: integer
          format: int32
          description: Цена товара без скидки
        photo_360:
          $ref: "#/components/schemas/ProductVisualEffects"
        price:
          type: integer
          format: int32
          description: Цена продажи
        product_attributes:
          type: array
          description: Свойства товара
          items:
            type: string
            description: Свойства товара
        product_id:
          type: integer
          format: int64
          description: Идентификатор карточки товара
        product_images:
          type: array
          description: Изображения продукта
          items:
            $ref: "#/components/schemas/ProductVisualEffects"
        seller_sku_id:
          type: string
          description: Идентификатор SKU в системе селлера
        size_chart:
          type: string
          description: Таблица размеров
        sku_characteristic_list:
          type: array
          description: Список характеристик SKU
          items:
            $ref: "#/components/schemas/SkuCharacteristic"
        sku_id:
          type: integer
          format: int64
          description: Идентификатор SKU
        title:
          type: string
          description: Название
        vat:
          type: string
          description: Ставка НДС
        video:
          $ref: "#/components/schemas/ProductVisualEffects"
        weight:
          type: integer
          format: int64
          description: Вес в граммах
        width:
          type: integer
          format: int64
          description: Ширина в мм
      required:
      - barcode
      - category_id
      - currency_code
      - description
      - height
      - is_active
      - is_archive
      - is_blocked
      - is_no_stock
      - length
      - okpd2
      - price
      - product_id
      - product_images
      - seller_sku_id
      - sku_id
      - title
      - vat
      - weight
      - width
    SkuInfoRequest:
      type: object
      description: Запрос на получение данных по SKU
      properties:
        filter:
          $ref: "#/components/schemas/SkuFilter"
        pagination:
          $ref: "#/components/schemas/Pagination"
      required:
      - pagination
    SkuInfoResponsePriceInfoResponse:
      type: object
      description: Ответ на запрос данных по остаткам
      properties:
        result:
          type: array
          items:
            $ref: "#/components/schemas/PriceInfoResponse"
    SkuInfoResponsePriceUpdateResponse:
      type: object
      description: Ответ на запрос данных по остаткам
      properties:
        result:
          type: array
          items:
            $ref: "#/components/schemas/PriceUpdateResponse"
    SkuInfoResponseProductDeleteResponse:
      type: object
      description: Ответ на запрос данных по остаткам
      properties:
        result:
          type: array
          items:
            $ref: "#/components/schemas/ProductDeleteResponse"
    SkuInfoResponseSkuArchiveResponse:
      type: object
      description: Ответ на запрос данных по остаткам
      properties:
        result:
          type: array
          items:
            $ref: "#/components/schemas/SkuArchiveResponse"
    SkuInfoResponseStockInfoResponse:
      type: object
      description: Ответ на запрос данных по остаткам
      properties:
        result:
          type: array
          items:
            $ref: "#/components/schemas/StockInfoResponse"
    SkuListRequest:
      type: object
      description: Запрос на получение списка SKU
      properties:
        filter:
          $ref: "#/components/schemas/SkuRequestFilter"
        pagination:
          $ref: "#/components/schemas/Pagination"
      required:
      - pagination
    SkuListResponse:
      type: object
      description: Ответ со списком SKU
      properties:
        result:
          type: array
          description: Список найденных SKU
          items:
            $ref: "#/components/schemas/SkuInfo"
      required:
      - result
    SkuRequest:
      type: object
      description: Массив со списком SKU
      properties:
        barcode:
          type: integer
          format: int64
          description: "Штрихкод SKU, в случае если он не будет передан Магнит Мар\
            кет создаст его"
        category_id:
          type: integer
          format: int64
          description: Идентификатор категории
        certificate:
          type: string
          description: "Сертификаты, конечный URL файла в jpg, png, pdf"
        composition:
          type: string
          description: "Состав товара: конечный URL файла в jpg, png, pdf"
        currency_code:
          type: string
          description: "Валюта цен. Возможные значения: RUB — российский рубль"
        custom_characteristic_values_skus:
          type: array
          description: Пользовательские характеристики sku для объединения SKU в одну
            карточку товара
          items:
            $ref: "#/components/schemas/CustomSkuCharacteristic"
        defined_characteristic_list:
          type: array
          description: Предопределенные характеристики
          items:
            $ref: "#/components/schemas/SkuCharacteristic"
        depth:
          type: integer
          format: int32
          deprecated: true
          description: "Глубина в мм (deprecated, используйте поле length)"
        description:
          type: string
          description: "Описание, единое для карточки товара. Ограничение: до 3000\
            \ символов"
          maxLength: 3000
          minLength: 0
        height:
          type: integer
          format: int32
          description: Высота в мм
        instruction:
          type: string
          description: "Инструкция по уходу и применению: конечный URL файла в jpg,\
            \ png, pdf"
        length:
          type: integer
          format: int32
          description: Длина в мм (приоритет над полем depth)
        okpd2:
          type: string
          description: Общероссийский классификатор продукции
        old_price:
          type: integer
          format: int32
          description: Цена товара без скидки (зачеркнутая)
        photo360:
          $ref: "#/components/schemas/ProductVisualEffects"
        price:
          type: integer
          format: int32
          description: Цена продажи (возможна скидка)
        product_attributes:
          type: array
          description: Свойства товара
          items:
            type: string
            description: Свойства товара
          maxItems: 10
          minItems: 0
        product_filters_list:
          type: array
          description: "Характеристики, относящиеся к Продукту"
          items:
            $ref: "#/components/schemas/SkuCharacteristic"
        product_images:
          type: array
          description: "Массив объектов с URL файлов в jpg, png, pdf с фото товаро\
            в; может быть несколько фото (до 10 штук)"
          items:
            $ref: "#/components/schemas/ProductVisualEffects"
        seller_sku_id:
          type: string
          description: "Уникальный идентификатор SKU в системе селлера. Длина: до\
            \ 80 символов. Допустимые символы: латиница (a-zA-Z), кириллица (а-яА\
            -Я, кроме ёЁ), цифры (0-9), некоторые специальные символы .,\\/()[]-=_."
        shop_id:
          type: integer
          format: int64
          description: Идентификатор магазина
        short_description:
          type: string
          description: "Краткое описание, единое для карточки товара. Ограничение\
            : до 300 символов"
          maxLength: 300
          minLength: 0
        size_chart:
          type: string
          description: "Конечный URL файла с размерной сеткой в jpg, png, pdf"
        sku_characteristic_list:
          type: array
          deprecated: true
          description: Характеристики SKU
          items:
            $ref: "#/components/schemas/SkuCharacteristic"
        sku_filter_list:
          type: array
          description: Фильтры SKU
          items:
            $ref: "#/components/schemas/CreateSkuFilter"
        sku_group_id:
          type: string
          description: "Идентификатор группы SKU. Укажите одинаковые значения для\
            \ всех SKU, которые должны быть объединены в одну карточку товара.Форм\
            ат: длина не более 80 символов, a-zA-Z0-9, а-яА-Я0-9 (кроме ёЁ), допус\
            тимы специальные символы .,\\/()[]-=_."
        title:
          type: string
          description: "Название, единое для карточки товара. Ограничение: до 90 с\
            имволов"
        vat:
          type: string
          description: "НДС. Возможные значения: 0, 5, 7, 10, 20, \"Не облагается\""
        video:
          $ref: "#/components/schemas/ProductVisualEffects"
        weight:
          type: integer
          format: int32
          description: Вес в граммах
        width:
          type: integer
          format: int32
          description: Ширина в мм
      required:
      - category_id
      - currency_code
      - description
      - height
      - length
      - price
      - product_filters_list
      - product_images
      - seller_sku_id
      - shop_id
      - short_description
      - sku_group_id
      - title
      - vat
      - weight
      - width
    SkuRequestFilter:
      type: object
      description: Фильтр для поиска SKU
      properties:
        category_id:
          type: integer
          format: int32
          description: Идентификатор категории
        shop_id:
          type: integer
          format: int32
          description: Идентификатор магазина
    SkuWarning:
      type: object
      description: Расшифровка по незначительным ошибкам
      properties:
        attributes:
          type: array
          description: Блок с расшифровкой незначительных ошибок при обновлении sku
          items:
            $ref: "#/components/schemas/SkuWarningAttribute"
        seller_sku_id:
          type: string
          description: SKU id продавца
        status:
          type: string
          description: Статус конкретного sku
      required:
      - attributes
      - seller_sku_id
      - status
    SkuWarningAttribute:
      type: object
      description: Расшифровка по незначительным ошибкам
      properties:
        attribute:
          type: string
          description: Проблемный атрибут
        message:
          type: string
          description: Предупреждение
      required:
      - attribute
      - message
    StockDto:
      type: object
      description: Данные по остаткам на складе продавца
      properties:
        seller_sku_id:
          type: string
          description: Идентификатор sku в системе продавца
          example: bdd8c471a3b0a3c1
        sku_id:
          type: integer
          format: int64
          description: Идентификатор sku (формирует ММ)
          example: 121
        stock:
          type: integer
          format: int64
          description: Остаток на складе селлера
          example: 1
        warehouse_id:
          type: string
          format: uuid
          description: Идентификатор склада (формирует ММ)
          example: bdd8c471-3dc8-4dd0-a544-30b5a3b0a3c1
      required:
      - stock
      - warehouse_id
    StockInfoDetails:
      type: object
      description: Детальные данные по остаткам
      properties:
        reserved:
          type: integer
          format: int64
          description: Количество зарезервированных товаров на складе
          example: 3
        stock:
          type: integer
          format: int64
          description: Количество товара
          example: 120
        type:
          type: string
          description: Тип склада
          example: FBS
    StockInfoResponse:
      type: object
      description: Данные по остаткам
      properties:
        seller_sku_id:
          type: string
          description: Идентификатор sku в системе продавца
          example: 30b5a3b0a3c1
        sku_id:
          type: integer
          format: int64
          description: Идентификатор sku (формирует ММ)
          example: 11
        stock_info_details:
          type: array
          items:
            $ref: "#/components/schemas/StockInfoDetails"
    StockRequest:
      type: object
      description: Запрос на обновление данные по остаткам
      properties:
        stocks:
          type: array
          description: Список объектов с данными об остатках
          items:
            $ref: "#/components/schemas/StockDto"
      required:
      - stocks
    TaskStatusResponse:
      type: object
      properties:
        count_warning:
          type: integer
          format: int32
          description: Количество предупреждений
        error:
          type: array
          description: Список ошибок при обработке товаров
          items:
            $ref: "#/components/schemas/ErrorInfo"
        status:
          type: string
          description: "Статус выполнения задачи: CREATED - создана, IN_PROGRESS -\
            \ выполняется, CANCELLED - отменена, COMPLETED - завершена"
          enum:
          - CREATED
          - IN_PROGRESS
          - CANCELLED
          - COMPLETED
        total_upload:
          type: integer
          format: int32
          description: Количество успешно загруженных товаров
        warnings:
          type: array
          description: Список предупреждений
          items:
            $ref: "#/components/schemas/SkuWarning"
    UpdateSkuDto:
      type: object
      properties:
        barcode:
          type: integer
          format: int64
          description: Штрихкод SKU
        dimensions:
          $ref: "#/components/schemas/SkuDimensions"
        seller_sku_id:
          type: string
          description: "Уникальный идентификатор SKU в системе селлера. Длина: до\
            \ 80 символов. Допустимые символы: латиница (a-zA-Z), кириллица (а-яА\
            -Я, кроме ёЁ), цифры (0-9), некоторые специальные символы .,\\/()[]-=_."
        sku_filter_list:
          type: array
          description: Фильтры SKU
          items:
            $ref: "#/components/schemas/UpdateSkuFilter"
      required:
      - seller_sku_id
    UpdateSkuFilter:
      type: object
      description: Фильтры SKU
      properties:
        characteristic_id:
          type: integer
          format: int64
          description: Идентификатор справочника
        characteristic_values:
          type: array
          description: Массив значений фильтра
          items:
            type: string
            description: Массив значений фильтра
          uniqueItems: true
      required:
      - characteristic_id
      - characteristic_values
    UpdateSkuRequest:
      type: object
      properties:
        sku_list:
          type: array
          items:
            $ref: "#/components/schemas/UpdateSkuDto"
    #magnit-market-seller-api-schema-lms
    MarketplacePaginationRequest:
      type: object
      properties:
        page_size:
          description: Лимит кол-ва элементов в одном ответе
          maximum: 1000
          minimum: 1
          default: 100
          type: integer
        page_token:
          type: string
          description: >
            В этом параметр необходимо передавать `next_page_token` из
            предыдущего ответа.

            Если параметр не задан возвращается первая страница с результатами.
    MarketplaceSortDirection:
      type: string
      description: Направление сортировки
      enum:
        - ASC
        - DESC
    MarketplaceDateTime:
      type: string
      format: date-time
      example: '2024-08-24T14:15:22Z'
      description: Дата/время в формате RFC3339 с указанием часового пояса
    MarketplaceFilterDateTime:
      type: object
      description: >
        Фильтр по временному интервалу. Необходимо передать хотя бы одно поле
        фильтра.


        * `from` Начало интервала (включительно).

        * `to`   Конец интервала (не включительно).
      properties:
        from:
          $ref: '#/components/schemas/MarketplaceDateTime'
        to:
          $ref: '#/components/schemas/MarketplaceDateTime'
      anyOf:
        - required:
            - from
        - required:
            - to
    MarketplaceOrdersUnprocessedRequest:
      type: object
      required:
        - dir
      allOf:
        - $ref: '#/components/schemas/MarketplacePaginationRequest'
        - type: object
          properties:
            dir:
              $ref: '#/components/schemas/MarketplaceSortDirection'
            cutoff_time:
              $ref: '#/components/schemas/MarketplaceFilterDateTime'
    MarketplacePaginationResponse:
      type: object
      properties:
        next_page_token:
          type: string
          description: |
            Токен для получения следующей страницы.
            Его необходимо передать в поле `page_token` в следующем запросе.
    MarketplaceOrderIdType:
      type: string
      description: Идентификатор сборочного задания
      maxLength: 36
    MarketplaceOrderStatus:
      type: string
      description: |
        Статус сборочного задания

        * `NEW`         - Новый
        * `IN_ASSEMBLY` - Собирается
        * `ASSEMBLED`   - Сборка завершена
        * `CANCELED`    - Отменен
      enum:
        - NEW
        - IN_ASSEMBLY
        - ASSEMBLED
        - CANCELED
    MarketplaceSkuIdType:
      type: integer
      format: int64
      example: 4323435
    MarketplaceOrderItemFinancialData:
      type: object
      required:
        - old_price
        - price
      properties:
        old_price:
          description: Старая цена товара
          type: number
          example: 30
        price:
          description: Цена единицы товара
          type: number
          example: 30
    MarketplaceOrderItem:
      type: object
      required:
        - sku_id
        - quantity
        - financial_data
      properties:
        sku_id:
          $ref: '#/components/schemas/MarketplaceSkuIdType'
        quantity:
          type: integer
          description: >-
            Кол-во единиц товара которое необходимо собрать.

            Поле отражает актуальное кол-во товара которое необходимо собрать.
            Если производить отмену товаров, то значение в этом поле будет
            уменьшаться
          example: 10
        canceled_quantity:
          type: integer
          description: Кол-во товаров которое было отменено при сборке.
          example: 1
        financial_data:
          $ref: '#/components/schemas/MarketplaceOrderItemFinancialData'
    MarketplaceOrder:
      type: object
      required:
        - order_id
        - status
        - cutoff_time
        - items
      properties:
        order_id:
          $ref: '#/components/schemas/MarketplaceOrderIdType'
        status:
          $ref: '#/components/schemas/MarketplaceOrderStatus'
        cutoff_time:
          description: >
            Дата и время, до которого необходимо собрать товары в посылки и
            привезти их на точку drop-off
          allOf:
            - $ref: '#/components/schemas/MarketplaceDateTime'
        items:
          description: |
            Список товаров которые необходимо собрать
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceOrderItem'
    MarketplaceOrdersUnprocessedResponse:
      type: object
      required:
        - orders
      allOf:
        - $ref: '#/components/schemas/MarketplacePaginationResponse'
        - properties:
            orders:
              type: array
              items:
                $ref: '#/components/schemas/MarketplaceOrder'
    MarketplaceApiError:
      type: object
      required:
        - message
      properties:
        message:
          description: Описание ошибки.
          type: string
    MarketplaceApiErrorResponse:
      type: object
      required:
        - errors
      allOf:
        - properties:
            errors:
              description: Список ошибок.
              type: array
              items:
                $ref: '#/components/schemas/MarketplaceApiError'
    MarketplaceOrdersListRequest:
      type: object
      required:
        - dir
        - created_at
      allOf:
        - $ref: '#/components/schemas/MarketplacePaginationRequest'
        - type: object
          properties:
            dir:
              $ref: '#/components/schemas/MarketplaceSortDirection'
            order_id:
              type: array
              minItems: 1
              maxItems: 50
              items:
                $ref: '#/components/schemas/MarketplaceOrderIdType'
            created_at:
              $ref: '#/components/schemas/MarketplaceFilterDateTime'
            status:
              $ref: '#/components/schemas/MarketplaceOrderStatus'
    MarketplaceOrdersListResponse:
      type: object
      required:
        - orders
      allOf:
        - $ref: '#/components/schemas/MarketplacePaginationResponse'
        - type: object
          properties:
            orders:
              type: array
              items:
                $ref: '#/components/schemas/MarketplaceOrder'
    MarketplaceSkuItem:
      type: object
      required:
        - sku_id
        - quantity
      properties:
        sku_id:
          $ref: '#/components/schemas/MarketplaceSkuIdType'
        quantity:
          type: integer
          minimum: 1
    MarketplaceOrderCancelItemsRequest:
      type: object
      required:
        - items
        - order_id
      properties:
        order_id:
          $ref: '#/components/schemas/MarketplaceOrderIdType'
        items:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceSkuItem'
    MarketplaceOrderCancelItemsResponse:
      type: object
      required:
        - order
      properties:
        order:
          $ref: '#/components/schemas/MarketplaceOrder'
    MarketplaceOrderCancelRequest:
      type: object
      required:
        - order_id
      properties:
        order_id:
          $ref: '#/components/schemas/MarketplaceOrderIdType'
    MarketplaceOrderCancelResponse:
      type: object
    MarketplaceOrderCompleteRequest:
      type: object
      required:
        - order_id
      properties:
        order_id:
          $ref: '#/components/schemas/MarketplaceOrderIdType'
    MarketplaceParcelIdType:
      type: string
      description: Идентификатор посылки
      maxLength: 36
    MarketplaceSkuIdentifiers:
      type: object
      description: Идентификаторы для товара
      properties:
        cis:
          description: Маркировка Честный знак
          type: string
        uin:
          description: Уникальный идентификационный номер (УИН) ювелирного изделия
          type: string
        rnpt:
          description: Регистрационный номер партии товара (РНПТ)
          type: string
        gtd:
          description: Номер грузовой таможенной декларации (ГТД)
          type: string
    MarketplaceParcelItem:
      type: object
      required:
        - sku_id
        - quantity
      properties:
        sku_id:
          $ref: '#/components/schemas/MarketplaceSkuIdType'
        quantity:
          type: integer
          minimum: 1
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceSkuIdentifiers'
    MarketplaceParcel:
      type: object
      required:
        - parcel_id
        - barcode
        - items
      properties:
        parcel_id:
          $ref: '#/components/schemas/MarketplaceParcelIdType'
        barcode:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceParcelItem'
    MarketplaceOrderCompleteResponse:
      type: object
      required:
        - parcels
      properties:
        parcels:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceParcel'
    MarketplaceCreateParcel:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceParcelItem'
    MarketplaceOrderParcelsRequest:
      type: object
      required:
        - parcels
        - order_id
      properties:
        order_id:
          $ref: '#/components/schemas/MarketplaceOrderIdType'
        parcels:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceCreateParcel'
    MarketplaceOrderParcelsResponse:
      type: object
      required:
        - parcels
      properties:
        parcels:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceParcel'
    MarketplaceParcelStatus:
      type: string
      description: |
        Статус посылки
        * `NEW`                  - Новая
        * `READY_TO_SHIPMENT`    - Готов к отгрузке
        * `AWAITING_DELIVERY`    - Передается в доставку
        * `DELIVERING`           - В пути
        * `RECEIVED`             - Получен клиентом
        * `CANCELED`             - Отменен
      enum:
        - NEW
        - READY_TO_SHIPMENT
        - AWAITING_DELIVERY
        - DELIVERING
        - RECEIVED
        - CANCELED
    MarketplaceParcelsListRequest:
      type: object
      required:
        - dir
      allOf:
        - $ref: '#/components/schemas/MarketplacePaginationRequest'
        - type: object
          properties:
            dir:
              $ref: '#/components/schemas/MarketplaceSortDirection'
            parcel_id:
              type: array
              minItems: 1
              maxItems: 50
              items:
                $ref: '#/components/schemas/MarketplaceParcelIdType'
            order_id:
              type: array
              minItems: 1
              maxItems: 50
              items:
                $ref: '#/components/schemas/MarketplaceOrderIdType'
            created_at:
              $ref: '#/components/schemas/MarketplaceFilterDateTime'
            cutoff_time:
              $ref: '#/components/schemas/MarketplaceFilterDateTime'
            status:
              $ref: '#/components/schemas/MarketplaceParcelStatus'
    MarketplaceParcelFullInfo:
      type: object
      required:
        - parcel_id
        - status
        - barcode
        - cutoff_time
        - items
      properties:
        parcel_id:
          $ref: '#/components/schemas/MarketplaceParcelIdType'
        order_id:
          $ref: '#/components/schemas/MarketplaceOrderIdType'
        status:
          $ref: '#/components/schemas/MarketplaceParcelStatus'
        barcode:
          type: string
        cutoff_time:
          type: string
          format: date-time
          example: '2019-08-24T14:15:22'
        items:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceParcelItem'
    MarketplaceParcelsListResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/MarketplacePaginationResponse'
        - type: object
          properties:
            parcels:
              type: array
              items:
                $ref: '#/components/schemas/MarketplaceParcelFullInfo'
    MarketplaceParcelMarkingItem:
      type: object
      required:
        - sku_id
        - identifiers
      properties:
        sku_id:
          $ref: '#/components/schemas/MarketplaceSkuIdType'
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceSkuIdentifiers'
    MarketplaceParcelsAddMarkingRequest:
      type: object
      required:
        - parcel_id
        - items
      properties:
        parcel_id:
          $ref: '#/components/schemas/MarketplaceParcelIdType'
        items:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceParcelMarkingItem'
    MarketplaceParcelsAddMarkingResponse:
      type: object
    MarketplaceParcelsLabelsRequest:
      type: object
      required:
        - parcel_id
      properties:
        parcel_id:
          type: array
          minItems: 1
          maxItems: 50
          items:
            $ref: '#/components/schemas/MarketplaceParcelIdType'
    MarketplaceParcelLabelItem:
      type: object
      required:
        - parcel_id
        - barcode
      properties:
        parcel_id:
          $ref: '#/components/schemas/MarketplaceParcelIdType'
        barcode:
          description: Штрих код посылки
          type: string
    MarketplaceParcelsLabelsResponse:
      type: object
      required:
        - parcels
        - file_content
      properties:
        file_content:
          description: PDF файл со всеми этикетками
          type: string
          example: |-
            %PDF-1.3
            3 0 obj
            <</Type /Page
            ...
        parcels:
          description: |
            Информация о посылках
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceParcelLabelItem'
    MarketplaceParcelsCancelRequest:
      type: object
      required:
        - parcel_id
      properties:
        parcel_id:
          $ref: '#/components/schemas/MarketplaceParcelIdType'
    MarketplaceParcelsCancelResponse:
      type: object
      properties: {}
    MarketplaceParcelsCreateRequest:
      type: object
      required:
        - order_id
        - items
      properties:
        order_id:
          $ref: '#/components/schemas/MarketplaceOrderIdType'
        items:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceParcelItem'
    MarketplaceParcelsCreateResponse:
      type: object
      properties:
        parcel_id:
          $ref: '#/components/schemas/MarketplaceParcelIdType'
        items:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceParcelItem'
    MarketplaceParcelsUnpackRequest:
      type: object
      required:
        - parcel_id
      properties:
        parcel_id:
          $ref: '#/components/schemas/MarketplaceParcelIdType'
    MarketplaceParcelsUnpackResponse:
      type: object
      properties: {}
    MarketplaceShipmentIdType:
      type: string
      description: Идентификатор отгрузки
      maxLength: 36
    MarketplaceShipmentStatus:
      type: string
      description: |
        Статус отгрузки
        * `DRAFT`                 — Формируется
        * `CONFIRMED`             — Подтверждена
        * `ACCEPTANCE_STARTED`    — Начата приемка отгрузки
        * `ACCEPTANCE_COMPLETED`  — Приемка отгрузки завершена
        * `CANCELED`              — Отменена
      enum:
        - DRAFT
        - CONFIRMED
        - ACCEPTANCE_STARTED
        - ACCEPTANCE_COMPLETED
        - CANCELED
    MarketplaceShipmentListRequest:
      type: object
      required:
        - dir
      allOf:
        - $ref: '#/components/schemas/MarketplacePaginationRequest'
        - type: object
          properties:
            dir:
              $ref: '#/components/schemas/MarketplaceSortDirection'
            shipment_id:
              type: array
              minItems: 1
              maxItems: 50
              items:
                $ref: '#/components/schemas/MarketplaceShipmentIdType'
            confirmed_at:
              $ref: '#/components/schemas/MarketplaceFilterDateTime'
            status:
              $ref: '#/components/schemas/MarketplaceShipmentStatus'
    MarketplaceShipment:
      type: object
      required:
        - shipment_id
      properties:
        shipment_id:
          $ref: '#/components/schemas/MarketplaceShipmentIdType'
        created_at:
          type: string
          format: date-time
          example: '2019-08-24T14:15:22'
        confirmed_at:
          type: string
          format: date-time
          example: '2019-08-24T14:15:22'
        status:
          $ref: '#/components/schemas/MarketplaceShipmentStatus'
        parcels:
          type: array
          items:
            properties:
              parcel_id:
                $ref: '#/components/schemas/MarketplaceParcelIdType'
              barcode:
                type: string
    MarketplaceShipmentListResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/MarketplacePaginationResponse'
        - type: object
          properties:
            shipments:
              type: array
              items:
                $ref: '#/components/schemas/MarketplaceShipment'
    MarketplaceShipmentAddParcelsRequest:
      type: object
      required:
        - parcel_id
      properties:
        parcel_id:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/MarketplaceParcelIdType'
    MarketplaceShipmentAddParcelsResponse:
      type: object
      properties:
        shipment_id:
          $ref: '#/components/schemas/MarketplaceShipmentIdType'
        parcels:
          type: array
          items:
            properties:
              parcel_id:
                $ref: '#/components/schemas/MarketplaceParcelIdType'
              barcode:
                type: string
    MarketplaceShipmentRemoveParcelsRequest:
      type: object
      required:
        - parcel_id
      properties:
        parcel_id:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/MarketplaceParcelIdType'
    MarketplaceShipmentRemoveParcelsResponse:
      type: object
      properties:
        shipment_id:
          $ref: '#/components/schemas/MarketplaceShipmentIdType'
        parcels:
          type: array
          items:
            properties:
              parcel_id:
                $ref: '#/components/schemas/MarketplaceParcelIdType'
              barcode:
                type: string
    MarketplaceShipmentsConfirmRequest:
      type: object
      required:
        - delivery_date
      properties:
        delivery_date:
          type: string
          description: |
            Плановая дата, когда отгрузка будет доставлена на точку drop-off
          example: '2025-01-01'
          format: date
    MarketplaceShipmentParcel:
      type: object
      required:
        - parcel_id
        - barcode
      properties:
        parcel_id:
          $ref: '#/components/schemas/MarketplaceParcelIdType'
        barcode:
          type: string
    MarketplaceShipmentsConfirmResponse:
      type: object
      properties:
        shipment_id:
          $ref: '#/components/schemas/MarketplaceShipmentIdType'
        parcels:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceShipmentParcel'
    MarketplaceShipmentsCancelRequest:
      type: object
      required:
        - shipment_id
      properties:
        shipment_id:
          $ref: '#/components/schemas/MarketplaceShipmentIdType'
    MarketplaceShipmentsCancelResponse:
      type: object
      required:
        - shipment_id
        - parcels
      properties:
        shipment_id:
          $ref: '#/components/schemas/MarketplaceShipmentIdType'
        parcels:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceShipmentParcel'
    MarketplaceShipmentGetDocumentsRequest:
      type: object
      required:
        - shipment_id
        - document_type
      properties:
        shipment_id:
          $ref: '#/components/schemas/MarketplaceShipmentIdType'
        document_type:
          type: string
          description: |
            Тип запрашиваемого документа:

            * `act_of_acceptance` — акт приема-передачи
            * `act_of_mismatch` — акт о расхождениях
            * `delivery_note` — лист отгрузки
          enum:
            - act_of_acceptance
            - act_of_mismatch
            - delivery_note
    MarketplaceShipmentGetDocumentsResponse:
      type: object
      required:
        - file_content
      properties:
        file_content:
          description: Содержимое документа в формате PDF
          type: string
          example: |
            %PDF-1.3\n3 0 obj\n<</Type /Page\n...
    #magnit-market-seller-api-schema-end
  requestBodies:
    OrderNotificationRequest:
      required: true
      description: Событие по заказу
      content:
        application/json:
          schema:
            type: object
            required:
              - type
            properties:
              type:
                $ref: "#/components/schemas/OrderNotificationTypeEnum"
          examples:
            Готов забрать:
              description: "Событие о том, что курьер готов забрать заказ для доставки, или клиент готов забрать заказ для самовывоза."
              value:
                type: order_ready_to_pick_up
            Забрал заказ:
              description: "Событие о том, что заказ был выдан курьеру или клиенту"
              value:
                type: order_picked_up
            Заказ оплачен:
              description: "Событие о том, что по заказу были получена оплата"
              value:
                type: order_paid

    OrderCancellationRequest:
      description: Информация об отмене заказа
      content:
        application/json:
          schema:
            type: object
            required:
              - reason
            properties:
              reason:
                $ref: "#/components/schemas/OrderCancellationReasonEnum"
              cancelled_at:
                type: string
                description: "Дата отмены заказа в RFC3339 с указанием часового пояса"
                example: "2023-12-31T00:00:00+03:00"

    OrderChangeStatusRequest:
      required: true
      description: Запрос на изменение статуса заказа. Отмена статуса заказа через данный метод невозможно.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrderChangeStatusRequest"

    PostV2OauthTokenRequest:
      required: true
      description: "Запрос на получение токена"
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            required:
              - client_id
              - client_secret
              - scope
              - grant_type
            properties:
              client_id:
                type: string
                description: "Идентификатор клиента"
                example: da8b953b-c6cc-4d88-a53f-60e3b0e96615
              client_secret:
                type: string
                description: "Секрет"
                example: 525348e77144a9cee9a7471a8b67c50ea85b9e3eb377a3c1a3a23db88f9150eefe76e6a3
              scope:
                type: string
                description: "Права доступа. Разделитель - пробел"
                example: openid last-mile:claims
              grant_type:
                type: string
                description: "Тип доступа"
                example: client_credentials
                default: client_credentials

    UpdatePartnerLogzoneConfigV1:
      description: "Обновление настроек LM в логзонах"
      required: true
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: object

    UpdatePartnerRequestBody:
      description: Запрос на обновление партнера
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                description: "Наименование партнера"
                type: string
              email:
                type: string
                description: "Email партнера"
                x-oapi-codegen-extra-tags:
                  validate: omitempty,email
              parent:
                type: string
                format: uuid
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid/v5
              config:
                type: object

    RatesReplace:
      required: true
      description: "Запрос на замену тарифов"
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - flow
              - rates
            properties:
              partner_id:
                type: string
                description: "Идентификатор партнера, к которому привязываются тарифы"
                example: "12345687890"
                x-oapi-codegen-extra-tags:
                  form: partner_id
              flow:
                type: string
                description: "Основной флоу партнера, к которому привязан тариф"
                example: "last_mile"
                x-oapi-codegen-extra-tags:
                  validate: required,oneof=last_mile
                  form: flow
              sub_flow:
                type: string
                description: "Ответвление от основного флоу партнера, к которому привязан тариф"
                example: "sub_flow_example"
                x-oapi-codegen-extra-tags:
                  form: sub_flow
              rates:
                type: string
                description: "Файл тарифов"
                format: binary
              started_at:
                type: string
                format: date-time
                description: "Дата и время начала действия тарифа"
                example: "2025-11-11T12:22:11+03:00"
                x-oapi-codegen-extra-tags:
                  validate: omitempty,gt
                  form: started_at
              finished_at:
                type: string
                format: date-time
                description: "Дата и время окончания действия тарифа"
                example: "2026-11-11T12:22:11+03:00"
                x-oapi-codegen-extra-tags:
                  validate: omitempty,gtefield=StartedAt
                  form: finished_at

  responses:
    OrderResponse:
      description: Состав заказа
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Order"

    OrderCreateResponse:
      description: Успешное создание заказа
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrderCreateResponse"

    IssueOrderCreateResponse:
      description: Раздел выдачи при создании заказа
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/IssueOrderCreateResponse"

    OrderStatusResponse:
      description: Актуальный статус заказа
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OrderStatusResponse"
          examples:
            Заказ создан:
              description: "Заказ создан в системе Магнит."
              value:
                status:
                  code: order_created
                  updated_at: "2014-03-31T14:11:29+02:00"
            Заказ собирается:
              description: "Заказ собирается/готовится."
              value:
                status:
                  code: order_on_work
                  updated_at: "2014-03-31T14:11:29+02:00"
            Заказ собран:
              description: "Заказ собран. Готов к самовывозу или ожидает курьера."
              value:
                status:
                  code: order_ready
                  updated_at: "2014-03-31T14:11:29+02:00"
            Заказ выдан:
              description: "Заказ выдан курьеру или произведен самовывоз."
              value:
                status:
                  code: order_issued
                  updated_at: "2014-03-31T14:11:29+02:00"
            Заказ доставлен:
              description: "Заказ вручен клиенту."
              value:
                status:
                  code: order_delivered
                  updated_at: "2014-03-31T14:11:29+02:00"
            Заказ отменен:
              description: "Заказ отменен."
              value:
                status:
                  code: order_cancelled
                  reason: unknown
                  updated_at: "2014-03-31T14:11:29+02:00"

    InternalServerErrorResponse:
      description: Внутренняя ошибка сервера Магнита. Такая ошибка через некоторое время исчезнет сама собой. Если этого не происходит, обратитесь в службу поддержки.

    UnavailableServerErrorResponse:
      description: Сервер Магнита перегружен. Такая ошибка через некоторое время исчезнет сама собой.

    BadRequestErrorResponse:
      description: Что-то не так в содержании запроса. Ориентируйтесь на описание ошибки, чтобы понять, что именно не так.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    BadRequestGoodStocksErrorResponse:
      description: Что-то не так в содержании запроса. Ориентируйтесь на описание ошибки, чтобы понять, что именно не так.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BadRequestStoresStockDelta"

    NotFoundErrorResponse:
      description: Запрашиваемый ресурс не найден. Проверьте адреса запросов, по которым обращается система партнера.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    UnauthorizedErrorResponse:
      description: В запросе не указан или указан несуществующий, истекший токен авторизации.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

    ForbiddenErrorResponseWithoutBody:
      description: Доступ к запрашиваемой информации запрещен.

    BadRequestErrorResponseWithoutBody:
      description: Что-то не так в содержании запроса.

    UnauthorizedErrorResponseWithoutBody:
      description: В запросе не указан или указан несуществующий, истекший токен авторизации.

    NotFoundErrorResponseWithoutBody:
      description: Запрашиваемый ресурс не найден. Проверьте адреса запросов, по которым обращается система партнера.

    PostV2OauthSuccessResponse:
      description: Успешное получение токена
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OauthToken"

    PostV2OauthBadResponse:
      description: Ошибка в параметрах, в ответе список ошибок валидации
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OauthError"

    StoresPricesResponse:
      description: Успешное получение цен по товарам в ТО Магнита
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StoresPricesItemsV1"

    StoresStocksResponse:
      description: Успешное получение остатков по товарам в ТО Магнита
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StoresStocksItemsV1"
    #magnit-market-seller-api-responses-begin
    #magnit-market-seller-api-responses-goods
    #magnit-market-seller-api-responses-lms
    Marketplace400:
      description: Запрос содержит неправильные данные
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/MarketplaceApiErrorResponse'
    Marketplace403:
      description: Нет доступа к запрашиваемому ресурсу
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MarketplaceApiErrorResponse'
    Marketplace404:
      description: Запрашиваемый ресурс не найдет
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MarketplaceApiErrorResponse'
    Marketplace500:
      description: Внутренняя ошибка сервера
      content:
        application/json:
          schema:
            type: object
            allOf:
              - $ref: '#/components/schemas/MarketplaceApiErrorResponse'
    #magnit-market-seller-api-responses-end
    Partner:
      description: Данные партнера
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Partner"

    ErrorResponse:
      description: Ответ с ошибками клиента или сервера
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    Config:
      description: Конфиг партнера
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Config"

    OK:
      description: "Тарифы успешно заменены"
      content: { }
    BadRequest:
      description: "Ошибка валидации"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Error'
    NotFound:
      description: "Передан хотя бы 1 несуществующий фильтр-код"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Error'
    InternalServerError:
      description: "Внутренняя ошибка сервера"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Error'
